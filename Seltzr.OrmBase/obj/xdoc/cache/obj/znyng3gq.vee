id: Seltzr.OrmBase
language: CSharp
name:
  Default: Seltzr.OrmBase
qualifiedName:
  Default: Seltzr.OrmBase
type: Assembly
modifiers: {}
items:
- id: Seltzr.Extensions
  commentId: N:Seltzr.Extensions
  language: CSharp
  name:
    CSharp: Seltzr.Extensions
    VB: Seltzr.Extensions
  nameWithType:
    CSharp: Seltzr.Extensions
    VB: Seltzr.Extensions
  qualifiedName:
    CSharp: Seltzr.Extensions
    VB: Seltzr.Extensions
  type: Namespace
  assemblies:
  - Seltzr.OrmBase
  modifiers: {}
  items:
  - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions
    commentId: T:Seltzr.Extensions.SeltzrOptionsBuilderExtensions
    language: CSharp
    name:
      CSharp: SeltzrOptionsBuilderExtensions
      VB: SeltzrOptionsBuilderExtensions
    nameWithType:
      CSharp: SeltzrOptionsBuilderExtensions
      VB: SeltzrOptionsBuilderExtensions
    qualifiedName:
      CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions
      VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions
    type: Class
    assemblies:
    - Seltzr.OrmBase
    namespace: Seltzr.Extensions
    source:
      remote:
        path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        branch: master
        repo: git@github.com:jlynch630/RestModels.git
      id: SeltzrOptionsBuilderExtensions
      path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
      startLine: 26
    summary: "\nExtension methods for the <xref href=\"Seltzr.Options.Builder.SeltzrOptionsBuilder%602\" data-throw-if-not-resolved=\"false\"></xref> class\n"
    example: []
    syntax:
      content:
        CSharp: public static class SeltzrOptionsBuilderExtensions
        VB: Public Module SeltzrOptionsBuilderExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.IgnorePrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.IgnorePrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1})
      language: CSharp
      name:
        CSharp: IgnorePrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>)
        VB: IgnorePrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.IgnorePrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>)
        VB: SeltzrOptionsBuilderExtensions.IgnorePrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.IgnorePrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.IgnorePrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: IgnorePrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.cs
        startLine: 33
      summary: "\nEnsures that the primary key of the <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TModel</code> will not be parsed from the request body\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> IgnorePrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function IgnorePrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser)) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.IgnorePrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.IncludePrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.IncludePrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1})
      language: CSharp
      name:
        CSharp: IncludePrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>)
        VB: IncludePrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.IncludePrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>)
        VB: SeltzrOptionsBuilderExtensions.IncludePrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.IncludePrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.IncludePrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: IncludePrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.cs
        startLine: 48
      summary: "\nEnsures that the primary key of the <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TModel</code> will be included in the response body\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> IncludePrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function IncludePrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser)) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.IncludePrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.OmitPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.OmitPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1})
      language: CSharp
      name:
        CSharp: OmitPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>)
        VB: OmitPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.OmitPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>)
        VB: SeltzrOptionsBuilderExtensions.OmitPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.OmitPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.OmitPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: OmitPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.cs
        startLine: 64
      summary: "\nEnsures that the primary key of the <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TModel</code> will be omitted from the response body\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> OmitPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function OmitPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser)) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.OmitPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},Seltzr.ParameterRetrievers.ParameterRetriever[])
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},Seltzr.ParameterRetrievers.ParameterRetriever[])
      language: CSharp
      name:
        CSharp: FilterByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, ParameterRetriever[])
        VB: FilterByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), ParameterRetriever())
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.FilterByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, ParameterRetriever[])
        VB: SeltzrOptionsBuilderExtensions.FilterByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), ParameterRetriever())
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, Seltzr.ParameterRetrievers.ParameterRetriever[])
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), Seltzr.ParameterRetrievers.ParameterRetriever())
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: FilterByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.cs
        startLine: 81
      summary: "\nFilter&apos;s this route&apos;s dataset by a request parameter that is compared to the primary key of the model\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> FilterByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, params ParameterRetriever[] parameters)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function FilterByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), ParamArray parameters As ParameterRetriever()) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: parameters
          type: Seltzr.ParameterRetrievers.ParameterRetriever[]
          description: The parameters to filter by
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String[])
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String[])
      language: CSharp
      name:
        CSharp: FilterByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String[])
        VB: FilterByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String())
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String[])
        VB: SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String())
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String[])
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String())
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: FilterByPrimaryKeyQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.cs
        startLine: 96
      summary: "\nFilter&apos;s this route&apos;s dataset by query parameters compared to the primary key of the model\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> FilterByPrimaryKeyQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, params string[] parameterNames)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function FilterByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), ParamArray parameterNames As String()) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: parameterNames
          type: System.String[]
          description: The names of the query parameters to filter by
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1})
      language: CSharp
      name:
        CSharp: FilterByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>)
        VB: FilterByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>)
        VB: SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: FilterByPrimaryKeyQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.cs
        startLine: 112
      summary: "\nFilter&apos;s this route&apos;s dataset by query parameters compared to the primary key of the model. The query parameters&apos;\nnames will be camelCased versions of their C# property name\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> FilterByPrimaryKeyQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function FilterByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser)) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyRoute``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String[])
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyRoute``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String[])
      language: CSharp
      name:
        CSharp: FilterByPrimaryKeyRoute<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String[])
        VB: FilterByPrimaryKeyRoute(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String())
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyRoute<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String[])
        VB: SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyRoute(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String())
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyRoute<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String[])
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyRoute(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String())
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: FilterByPrimaryKeyRoute
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.cs
        startLine: 125
      summary: "\nFilter&apos;s this route&apos;s dataset by route values compared to the primary key of the model\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> FilterByPrimaryKeyRoute<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, params string[] parameterNames)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function FilterByPrimaryKeyRoute(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), ParamArray parameterNames As String()) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: parameterNames
          type: System.String[]
          description: The names of the query parameters to filter by
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyRoute*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyRoute``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyRoute``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1})
      language: CSharp
      name:
        CSharp: FilterByPrimaryKeyRoute<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>)
        VB: FilterByPrimaryKeyRoute(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyRoute<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>)
        VB: SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyRoute(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyRoute<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyRoute(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: FilterByPrimaryKeyRoute
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.cs
        startLine: 141
      summary: "\nFilter&apos;s this route&apos;s dataset by route values compared to the primary key of the model. The query parameters&apos; names\nwill be camelCased versions of their C# property name\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> FilterByPrimaryKeyRoute<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function FilterByPrimaryKeyRoute(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser)) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyRoute*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Delete``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Delete``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: Delete<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Delete(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.Delete<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.Delete(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Delete<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Delete(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Delete.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: Delete
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Delete.cs
        startLine: 37
      summary: "\nSets this route up to handle a DELETE request using an ORM\n"
      remarks: "\nIf not used with any filters, this route will drop all models in the dataset\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> Delete<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Delete(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Delete*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,Seltzr.ParameterRetrievers.ParameterRetriever[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,Seltzr.ParameterRetrievers.ParameterRetriever[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: DeleteByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, ParameterRetriever[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: DeleteByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, ParameterRetriever(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, ParameterRetriever[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, ParameterRetriever(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, Seltzr.ParameterRetrievers.ParameterRetriever[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, Seltzr.ParameterRetrievers.ParameterRetriever(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Delete.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: DeleteByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Delete.cs
        startLine: 64
      summary: "\nSets this route up to handle a DELETE by primary key request using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> DeleteByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, ParameterRetriever[] parameters, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function DeleteByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, parameters As ParameterRetriever(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: parameters
          type: Seltzr.ParameterRetrievers.ParameterRetriever[]
          description: The parameters that will make up the primary key to filter by
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: DeleteByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: DeleteByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.String[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.String(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Delete.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: DeleteByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Delete.cs
        startLine: 88
      summary: "\nSets this route up to handle a DELETE request by route values using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> DeleteByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, string[] parameterNames, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function DeleteByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, parameterNames As String(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: parameterNames
          type: System.String[]
          description: The names of the route value parameters to use
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1})
      language: CSharp
      name:
        CSharp: DeleteByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>)
        VB: DeleteByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>)
        VB: SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Delete.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: DeleteByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Delete.cs
        startLine: 111
      summary: "\nSets this route up to handle a DELETE request by route values using an ORM. The names of the route values\nwill be camelCased versions of the C# property name. If these route parameters do not already exist they will be\nadded in order, e.g. /key1/key2.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> DeleteByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function DeleteByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser)) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: DeleteByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: DeleteByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Delete.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: DeleteByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Delete.cs
        startLine: 127
      summary: "\nSets this route up to handle a DELETE request by route values using an ORM. The names of the route values\nwill be camelCased versions of the C# property name. If these route parameters do not already exist they will be\nadded in order, e.g. /key1/key2.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> DeleteByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function DeleteByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser))) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: DeleteByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: DeleteByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Delete.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: DeleteByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Delete.cs
        startLine: 155
      summary: "\nSets this route up to handle a DELETE request by route values using an ORM. The names of the route values\nwill be camelCased versions of the C# property name. If these route parameters do not already exist they will be\nadded in order, e.g. /key1/key2.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> DeleteByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function DeleteByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: DeleteByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: DeleteByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Delete.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: DeleteByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Delete.cs
        startLine: 182
      summary: "\nSets this route up to handle a DELETE request by route values using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> DeleteByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, string parameterName, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function DeleteByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, parameterName As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: parameterName
          type: System.String
          description: The name of the route value parameter to use
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: DeleteByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: DeleteByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.String[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.String(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Delete.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: DeleteByPrimaryKeyQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Delete.cs
        startLine: 201
      summary: "\nSets this route up to handle a DELETE request by query parameters using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> DeleteByPrimaryKeyQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, string[] parameterNames, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function DeleteByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, parameterNames As String(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: parameterNames
          type: System.String[]
          description: The names of the route value parameters to use
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: DeleteByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: DeleteByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Delete.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: DeleteByPrimaryKeyQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Delete.cs
        startLine: 225
      summary: "\nSets this route up to handle a DELETE request by a primary key query parameter using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> DeleteByPrimaryKeyQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, string parameterName, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function DeleteByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, parameterName As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: parameterName
          type: System.String
          description: The name of the route value parameter to use
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: DeleteByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: DeleteByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Delete.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: DeleteByPrimaryKeyQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Delete.cs
        startLine: 244
      summary: "\nSets this route up to handle a DELETE request by query parameters using an ORM. The names of the query\nparameters will be camelCased names of the primary key of the entity\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> DeleteByPrimaryKeyQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function DeleteByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: DeleteByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: DeleteByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Delete.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: DeleteByPrimaryKeyQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Delete.cs
        startLine: 263
      summary: "\nSets this route up to handle a DELETE request by query parameters on the same route pattern using an ORM.\nThe names of the query parameters will be camelCased names of the primary key of the entity\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> DeleteByPrimaryKeyQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function DeleteByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Get``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Get``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: Get<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Get(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.Get<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.Get(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Get<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Get(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Get.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: Get
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Get.cs
        startLine: 32
      summary: "\nSets this route up to handle a GET request using an ORM\n"
      remarks: This function just calls <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602.SetupGet(System.String%2cSystem.Action%7bSeltzr.Options.Builder.SeltzrOptionsBuilder%7b%600%2c%601%7d%7d)" data-throw-if-not-resolved="false"></xref>, just makes GET requests more consistent in Entity Framework with the other requests
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> Get<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Get(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser))) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Get*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
        ? Seltzr.Options.Builder.SeltzrOptionsBuilder`2.SetupGet(System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{`0,`1}})
        : 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Get``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Get``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: Get<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Get(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.Get<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.Get(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Get<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Get(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Get.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: Get
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Get.cs
        startLine: 49
      summary: "\nSets this route up to handle a GET request using an ORM\n"
      remarks: This function simply calls <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602.SetupGet(System.Action%7bSeltzr.Options.Builder.SeltzrOptionsBuilder%7b%600%2c%601%7d%7d)" data-throw-if-not-resolved="false"></xref>, makes GET requests more consistent in Entity Framework with the other requests
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> Get<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Get(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser))) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Get*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2.SetupGet(System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{`0,`1}}): 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Get``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Get``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1})
      language: CSharp
      name:
        CSharp: Get<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>)
        VB: Get(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.Get<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>)
        VB: SeltzrOptionsBuilderExtensions.Get(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Get<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Get(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Get.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: Get
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Get.cs
        startLine: 64
      summary: "\nSets this route up to handle a GET request using an ORM\n"
      remarks: This function simply calls <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602.SetupGet" data-throw-if-not-resolved="false"></xref>, makes GET requests more consistent in Entity Framework with the other requests
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> Get<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Get(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser)) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Get*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2.SetupGet: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,Seltzr.ParameterRetrievers.ParameterRetriever[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,Seltzr.ParameterRetrievers.ParameterRetriever[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: GetByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, ParameterRetriever[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: GetByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, ParameterRetriever(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.GetByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, ParameterRetriever[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.GetByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, ParameterRetriever(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, Seltzr.ParameterRetrievers.ParameterRetriever[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, Seltzr.ParameterRetrievers.ParameterRetriever(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Get.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: GetByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Get.cs
        startLine: 80
      summary: "\nSets this route up to handle a GET by primary key request using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> GetByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, ParameterRetriever[] parameters, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, parameters As ParameterRetriever(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: parameters
          type: Seltzr.ParameterRetrievers.ParameterRetriever[]
          description: The parameters that will make up the primary key to filter by
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: GetByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: GetByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.GetByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.GetByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.String[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.String(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Get.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: GetByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Get.cs
        startLine: 104
      summary: "\nSets this route up to handle a GET request by route values using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> GetByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, string[] parameterNames, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, parameterNames As String(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: parameterNames
          type: System.String[]
          description: The names of the route value parameters to use
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: GetByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: GetByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.GetByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.GetByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Get.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: GetByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Get.cs
        startLine: 128
      summary: "\nSets this route up to handle a GET request by route values using an ORM. The names of the route values\nwill be camelCased versions of the C# property name. If these route parameters do not already exist they will be\nadded in order, e.g. /key1/key2.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> GetByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: GetByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: GetByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.GetByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.GetByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Get.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: GetByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Get.cs
        startLine: 156
      summary: "\nSets this route up to handle a GET request by route values using an ORM. The names of the route values\nwill be camelCased versions of the C# property name. If these route parameters do not already exist they will be\nadded in order, e.g. /key1/key2.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> GetByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: GetByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: GetByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.GetByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.GetByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Get.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: GetByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Get.cs
        startLine: 183
      summary: "\nSets this route up to handle a GET request by route values using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> GetByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, string parameterName, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, parameterName As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: parameterName
          type: System.String
          description: The name of the route value parameter to use
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: GetByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: GetByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.String[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.String(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Get.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: GetByPrimaryKeyQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Get.cs
        startLine: 202
      summary: "\nSets this route up to handle a GET request by query parameters using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> GetByPrimaryKeyQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, string[] parameterNames, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, parameterNames As String(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: parameterNames
          type: System.String[]
          description: The names of the route value parameters to use
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: GetByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: GetByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Get.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: GetByPrimaryKeyQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Get.cs
        startLine: 226
      summary: "\nSets this route up to handle a GET request by a primary key query parameter using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> GetByPrimaryKeyQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, string parameterName, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, parameterName As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: parameterName
          type: System.String
          description: The name of the route value parameter to use
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: GetByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: GetByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Get.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: GetByPrimaryKeyQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Get.cs
        startLine: 245
      summary: "\nSets this route up to handle a GET request by query parameters using an ORM. The names of the query\nparameters will be camelCased names of the primary key of the entity\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> GetByPrimaryKeyQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: GetByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: GetByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Get.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: GetByPrimaryKeyQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.Get.cs
        startLine: 264
      summary: "\nSets this route up to handle a GET request by query parameters on the same route pattern using an ORM.\nThe names of the query parameters will be camelCased names of the primary key of the entity\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> GetByPrimaryKeyQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.String[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.String(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 39
      summary: "\nSets this route up to handle a PATCH update request using an ORM, comparing the given property with a\nroute value to determine which elements to update\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, string[] routeValues, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), routeValues As String(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        - id: routeValues
          type: System.String[]
          description: The route value names to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 65
      summary: "\nSets this route up to handle a PATCH update request using an ORM, comparing the given property with a\nroute value to determine which elements to update. The names of the route values will be camelCase versions of the\nC# properties to compare. If these route values do not yet exist, they will be added to the end of the route\npattern in order.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser))) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.String[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.String(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 98
      summary: "\nSets this route up to handle a PATCH update request using an ORM at the same route pattern, comparing the\ngiven property with a route value to determine which elements to update\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, string[] routeValues, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), routeValues As String(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        - id: routeValues
          type: System.String[]
          description: The route value names to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 118
      summary: "\nSets this route up to handle a PATCH update request using an ORM, comparing the given property with a\nroute value to determine which elements to update. The names of the route values will be camelCase versions of the\nC# properties to compare. If these route values do not yet exist, they will be added to the end of the route\npattern in order.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser))) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      language: CSharp
      name:
        CSharp: PatchUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
        VB: PatchUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 136
      summary: "\nSets this route up to handle a PATCH update request using an ORM, comparing the given property with a\nroute value to determine which elements to update. The names of the route values will be camelCase versions of the\nC# properties to compare. If these route values do not yet exist, they will be added to the end of the route\npattern in order.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, params Expression<Func<TModel, object>>[] propertyExpressions)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 154
      summary: "\nSets this route up to handle a PATCH update request using an ORM, comparing the given property with a\nroute value to determine which elements to update\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, string routeValue, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), routeValue As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: routeValue
          type: System.String
          description: The route value names to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 174
      summary: "\nSets this route up to handle a PATCH update request using an ORM, comparing the given property with a\nroute value to determine which elements to update\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, string routeValue, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), routeValue As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: routeValue
          type: System.String
          description: The route value names to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 194
      summary: "\nSets this route up to handle a PATCH update request using an ORM at the same route, comparing the given\nproperty with a route value to determine which elements to update. The name of the route value will be a camelCase\nversion of the C# property to compare. If this route value does not yet exist, it will be added to the end of the\nroute pattern.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 215
      summary: "\nSets this route up to handle a PATCH update request using an ORM at the same route, comparing the given\nproperty with a route value to determine which elements to update. The name of the route value will be a camelCase\nversion of the C# property to compare. If this route value does not yet exist, it will be added to the end of the\nroute pattern.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      language: CSharp
      name:
        CSharp: PatchUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
        VB: PatchUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 236
      summary: "\nSets this route up to handle a PATCH update request using an ORM at the same route, comparing the given\nproperty with a route value to determine which elements to update. The name of the route value will be a camelCase\nversion of the C# property to compare. If this route value does not yet exist, it will be added to the end of the\nroute pattern.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, params Expression<Func<TModel, object>>[] propertyExpressions)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateByBody
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 254
      summary: "\nSets this route up to handle a PATCH update request using an ORM. The property to compare is assumed to be\ndirectly set in the parsed model\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateByBody<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateByBody(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateByBody
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 273
      summary: "\nSets this route up to handle a PATCH update request using an ORM. The property to compare is assumed to be\ndirectly set in the parsed model\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateByBody<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateByBody(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      language: CSharp
      name:
        CSharp: PatchUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
        VB: PatchUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateByBody
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 290
      summary: "\nSets this route up to handle a PATCH update request using an ORM. The properties to compare are assumed to\nbe directly set in the parsed model\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateByBody<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, params Expression<Func<TModel, object>>[] propertyExpressions)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateByBody(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when update the model
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateByBody
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 308
      summary: "\nSets this route up to handle a PATCH update request using an ORM. The properties to compare are assumed to\nbe directly set in the parsed model\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateByBody<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateByBody(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser))) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when update the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateByBody
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 326
      summary: "\nSets this route up to handle a PATCH update request using an ORM. The properties to compare are assumed to\nbe directly set in the parsed model\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateByBody<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateByBody(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser))) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when update the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      language: CSharp
      name:
        CSharp: PatchUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
        VB: PatchUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateByBody
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 342
      summary: "\nSets this route up to handle a PATCH update request using an ORM. The properties to compare are assumed to\nbe directly set in the parsed model\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateByBody<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, params Expression<Func<TModel, object>>[] propertyExpressions)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateByBody(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when update the model
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByParam``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],Seltzr.ParameterRetrievers.ParameterRetriever[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByParam``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],Seltzr.ParameterRetrievers.ParameterRetriever[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateByParam<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], ParameterRetriever[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateByParam(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), ParameterRetriever(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateByParam<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], ParameterRetriever[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateByParam(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), ParameterRetriever(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByParam<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], Seltzr.ParameterRetrievers.ParameterRetriever[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByParam(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), Seltzr.ParameterRetrievers.ParameterRetriever(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateByParam
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 359
      summary: "\nSets this route up to handle a PATCH update request using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateByParam<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, ParameterRetriever[] retrievers, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateByParam(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), retrievers As ParameterRetriever(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        - id: retrievers
          type: Seltzr.ParameterRetrievers.ParameterRetriever[]
          description: The parameters to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByParam*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByParam``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},Seltzr.ParameterRetrievers.ParameterRetriever,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByParam``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},Seltzr.ParameterRetrievers.ParameterRetriever,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateByParam<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, ParameterRetriever, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateByParam(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), ParameterRetriever, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateByParam<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, ParameterRetriever, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateByParam(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), ParameterRetriever, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByParam<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, Seltzr.ParameterRetrievers.ParameterRetriever, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByParam(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), Seltzr.ParameterRetrievers.ParameterRetriever, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateByParam
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 392
      summary: "\nSets this route up to handle a PATCH update request using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateByParam<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, ParameterRetriever retriever, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateByParam(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), retriever As ParameterRetriever, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: retriever
          type: Seltzr.ParameterRetrievers.ParameterRetriever
          description: The parameter to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByParam*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByParam``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],Seltzr.ParameterRetrievers.ParameterRetriever[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByParam``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],Seltzr.ParameterRetrievers.ParameterRetriever[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateByParam<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], ParameterRetriever[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateByParam(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), ParameterRetriever(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateByParam<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], ParameterRetriever[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateByParam(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), ParameterRetriever(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByParam<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], Seltzr.ParameterRetrievers.ParameterRetriever[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByParam(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), Seltzr.ParameterRetrievers.ParameterRetriever(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateByParam
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 416
      summary: "\nSets this route up to handle a PATCH update request using an ORM.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateByParam<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, ParameterRetriever[] retrievers, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateByParam(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), retrievers As ParameterRetriever(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when update the model
        - id: retrievers
          type: Seltzr.ParameterRetrievers.ParameterRetriever[]
          description: The parameters to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByParam*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,Seltzr.ParameterRetrievers.ParameterRetriever[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,Seltzr.ParameterRetrievers.ParameterRetriever[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, ParameterRetriever[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, ParameterRetriever(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, ParameterRetriever[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, ParameterRetriever(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, Seltzr.ParameterRetrievers.ParameterRetriever[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, Seltzr.ParameterRetrievers.ParameterRetriever(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 434
      summary: "\nSets this route up to handle a PATCH update by primary key request using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, ParameterRetriever[] parameters, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, parameters As ParameterRetriever(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: parameters
          type: Seltzr.ParameterRetrievers.ParameterRetriever[]
          description: The parameters that will make up the primary key to filter by
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.String[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.String(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 467
      summary: "\nSets this route up to handle a PATCH update request by route values using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, string[] parameterNames, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, parameterNames As String(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: parameterNames
          type: System.String[]
          description: The names of the route value parameters to use
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1})
      language: CSharp
      name:
        CSharp: PatchUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>)
        VB: PatchUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 489
      summary: "\nSets this route up to handle a PATCH update request by route values using an ORM. The names of the route\nvalues\nwill be camelCased versions of the C# property name. If these route parameters do not already exist they will be\nadded in order, e.g. /key1/key2.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser)) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 505
      summary: "\nSets this route up to handle a PATCH update request by route values using an ORM. The names of the route\nvalues\nwill be camelCased versions of the C# property name. If these route parameters do not already exist they will be\nadded in order, e.g. /key1/key2.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser))) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 523
      summary: "\nSets a route up to handle a PATCH update request by route values using an ORM. The names of the route\nvalues\nwill be camelCased versions of the C# property name. If these route parameters do not already exist they will be\nadded in order, e.g. /key1/key2.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 553
      summary: "\nSets a route up to handle a PATCH update request by route values using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, string parameterName, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, parameterName As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: parameterName
          type: System.String
          description: The name of the route value parameter to use
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.String[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.String(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateByPrimaryKeyQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 572
      summary: "\nSets a route up to handle a PATCH update request by query parameters using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateByPrimaryKeyQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, string[] parameterNames, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, parameterNames As String(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: parameterNames
          type: System.String[]
          description: The names of the route value parameters to use
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateByPrimaryKeyQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 594
      summary: "\nSets a route up to handle a PATCH update request by a primary key query parameter using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateByPrimaryKeyQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, string parameterName, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, parameterName As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: parameterName
          type: System.String
          description: The name of the route value parameter to use
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateByPrimaryKeyQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 614
      summary: "\nSets a route up to handle a PATCH update request by query parameters using an ORM. The names of the\nquery\nparameters will be camelCased names of the primary key of the entity\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateByPrimaryKeyQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateByPrimaryKeyQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 634
      summary: "\nSets this route up to handle a PATCH update request by query parameters on the same route pattern using Entity\nFramework.\nThe names of the query parameters will be camelCased names of the primary key of the entity\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateByPrimaryKeyQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.String[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.String(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 655
      summary: "\nSets this route up to handle a PATCH update request using an ORM, comparing the given property with a\nquery parameter to determine which elements to update\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, string[] queryParameters, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), queryParameters As String(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        - id: queryParameters
          type: System.String[]
          description: The query parameter names to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 681
      summary: "\nSets this route up to handle a PATCH update request using an ORM, comparing the given property with a\nquery parameter to determine which elements to update. The names of the query parameters will be camelCase versions\nof the\nC# properties to compare.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser))) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.String[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.String(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 703
      summary: "\nSets this route up to handle a PATCH update request using an ORM at the same route pattern, comparing the\ngiven property with a query parameter to determine which elements to update\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, string[] queryParameters, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), queryParameters As String(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        - id: queryParameters
          type: System.String[]
          description: The query parameter names to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 723
      summary: "\nSets this route up to handle a PATCH update request using an ORM, comparing the given property with a\nquery parameter to determine which elements to update. The names of the query parameters will be camelCase versions\nof the\nC# properties to compare.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser))) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      language: CSharp
      name:
        CSharp: PatchUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
        VB: PatchUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 741
      summary: "\nSets this route up to handle a PATCH update request using an ORM, comparing the given property with a\nquery parameter to determine which elements to update. The names of the query parameters will be camelCase versions\nof the\nC# properties to compare.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, params Expression<Func<TModel, object>>[] propertyExpressions)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 759
      summary: "\nSets this route up to handle a PATCH update request using an ORM, comparing the given property with a\nquery parameter to determine which elements to update\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, string queryParameter, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), queryParameter As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: queryParameter
          type: System.String
          description: The query parameter names to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 783
      summary: "\nSets this route up to handle a PATCH update request using an ORM, comparing the given property with a\nquery parameter to determine which elements to update\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, string queryParameter, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), queryParameter As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: queryParameter
          type: System.String
          description: The query parameter names to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 805
      summary: "\nSets this route up to handle a PATCH update request using an ORM at the same route, comparing the given\nproperty with a query parameter to determine which elements to update. The name of the query parameter will be a\ncamelCase\nversion of the C# property to compare. If this query parameter does not yet exist, it will be added to the end of\nthe\nroute pattern.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PatchUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PatchUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 828
      summary: "\nSets this route up to handle a PATCH update request using an ORM at the same route, comparing the given\nproperty with a query parameter to determine which elements to update. The name of the query parameter will be a\ncamelCase\nversion of the C# property to compare. If this query parameter does not yet exist, it will be added to the end of\nthe\nroute pattern.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      language: CSharp
      name:
        CSharp: PatchUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
        VB: PatchUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
        VB: SeltzrOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PatchUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PatchUpdate.cs
        startLine: 851
      summary: "\nSets this route up to handle a PATCH update request using an ORM at the same route, comparing the given\nproperty with a query parameter to determine which elements to update. The name of the query parameter will be a\ncamelCase\nversion of the C# property to compare. If this query parameter does not yet exist, it will be added to the end of\nthe\nroute pattern.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PatchUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, params Expression<Func<TModel, object>>[] propertyExpressions)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PatchUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostCreate``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostCreate``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostCreate<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostCreate(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostCreate<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostCreate(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostCreate<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostCreate(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostCreate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostCreate
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostCreate.cs
        startLine: 29
      summary: "\nSets this route up to handle a POST creation request using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostCreate<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostCreate(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostCreate*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostCreate``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostCreate``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostCreate<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostCreate(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostCreate<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostCreate(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostCreate<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostCreate(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostCreate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostCreate
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostCreate.cs
        startLine: 56
      summary: "\nSets this route up to handle a POST creation request with the same route pattern using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostCreate<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostCreate(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostCreate*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.String[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.String(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 39
      summary: "\nSets this route up to handle a POST update request using an ORM, comparing the given property with a\nroute value to determine which elements to update\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, string[] routeValues, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), routeValues As String(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        - id: routeValues
          type: System.String[]
          description: The route value names to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 65
      summary: "\nSets this route up to handle a POST update request using an ORM, comparing the given property with a\nroute value to determine which elements to update. The names of the route values will be camelCase versions of the\nC# properties to compare. If these route values do not yet exist, they will be added to the end of the route\npattern in order.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser))) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.String[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.String(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 98
      summary: "\nSets this route up to handle a POST update request using an ORM at the same route pattern, comparing the\ngiven property with a route value to determine which elements to update\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, string[] routeValues, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), routeValues As String(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        - id: routeValues
          type: System.String[]
          description: The route value names to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 118
      summary: "\nSets this route up to handle a POST update request using an ORM, comparing the given property with a\nroute value to determine which elements to update. The names of the route values will be camelCase versions of the\nC# properties to compare. If these route values do not yet exist, they will be added to the end of the route\npattern in order.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser))) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      language: CSharp
      name:
        CSharp: PostUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
        VB: PostUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
        VB: SeltzrOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 136
      summary: "\nSets this route up to handle a POST update request using an ORM, comparing the given property with a\nroute value to determine which elements to update. The names of the route values will be camelCase versions of the\nC# properties to compare. If these route values do not yet exist, they will be added to the end of the route\npattern in order.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, params Expression<Func<TModel, object>>[] propertyExpressions)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 154
      summary: "\nSets this route up to handle a POST update request using an ORM, comparing the given property with a\nroute value to determine which elements to update\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, string routeValue, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), routeValue As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: routeValue
          type: System.String
          description: The route value names to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 174
      summary: "\nSets this route up to handle a POST update request using an ORM, comparing the given property with a\nroute value to determine which elements to update\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, string routeValue, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), routeValue As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: routeValue
          type: System.String
          description: The route value names to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 194
      summary: "\nSets this route up to handle a POST update request using an ORM at the same route, comparing the given\nproperty with a route value to determine which elements to update. The name of the route value will be a camelCase\nversion of the C# property to compare. If this route value does not yet exist, it will be added to the end of the\nroute pattern.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 215
      summary: "\nSets this route up to handle a POST update request using an ORM at the same route, comparing the given\nproperty with a route value to determine which elements to update. The name of the route value will be a camelCase\nversion of the C# property to compare. If this route value does not yet exist, it will be added to the end of the\nroute pattern.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      language: CSharp
      name:
        CSharp: PostUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
        VB: PostUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
        VB: SeltzrOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 236
      summary: "\nSets this route up to handle a POST update request using an ORM at the same route, comparing the given\nproperty with a route value to determine which elements to update. The name of the route value will be a camelCase\nversion of the C# property to compare. If this route value does not yet exist, it will be added to the end of the\nroute pattern.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, params Expression<Func<TModel, object>>[] propertyExpressions)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateByBody
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 254
      summary: "\nSets this route up to handle a POST update request using an ORM. The property to compare is assumed to be\ndirectly set in the parsed model\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateByBody<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateByBody(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateByBody
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 273
      summary: "\nSets this route up to handle a POST update request using an ORM. The property to compare is assumed to be\ndirectly set in the parsed model\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateByBody<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateByBody(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      language: CSharp
      name:
        CSharp: PostUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
        VB: PostUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
        VB: SeltzrOptionsBuilderExtensions.PostUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateByBody
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 290
      summary: "\nSets this route up to handle a POST update request using an ORM. The properties to compare are assumed to\nbe directly set in the parsed model\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateByBody<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, params Expression<Func<TModel, object>>[] propertyExpressions)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateByBody(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when update the model
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateByBody
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 308
      summary: "\nSets this route up to handle a POST update request using an ORM. The properties to compare are assumed to\nbe directly set in the parsed model\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateByBody<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateByBody(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser))) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when update the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateByBody
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 326
      summary: "\nSets this route up to handle a POST update request using an ORM. The properties to compare are assumed to\nbe directly set in the parsed model\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateByBody<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateByBody(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser))) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when update the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      language: CSharp
      name:
        CSharp: PostUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
        VB: PostUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
        VB: SeltzrOptionsBuilderExtensions.PostUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateByBody
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 342
      summary: "\nSets this route up to handle a POST update request using an ORM. The properties to compare are assumed to\nbe directly set in the parsed model\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateByBody<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, params Expression<Func<TModel, object>>[] propertyExpressions)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateByBody(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when update the model
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByParam``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],Seltzr.ParameterRetrievers.ParameterRetriever[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByParam``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],Seltzr.ParameterRetrievers.ParameterRetriever[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateByParam<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], ParameterRetriever[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateByParam(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), ParameterRetriever(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateByParam<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], ParameterRetriever[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateByParam(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), ParameterRetriever(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByParam<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], Seltzr.ParameterRetrievers.ParameterRetriever[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByParam(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), Seltzr.ParameterRetrievers.ParameterRetriever(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateByParam
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 359
      summary: "\nSets this route up to handle a POST update request using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateByParam<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, ParameterRetriever[] retrievers, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateByParam(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), retrievers As ParameterRetriever(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        - id: retrievers
          type: Seltzr.ParameterRetrievers.ParameterRetriever[]
          description: The parameters to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByParam*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByParam``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},Seltzr.ParameterRetrievers.ParameterRetriever,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByParam``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},Seltzr.ParameterRetrievers.ParameterRetriever,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateByParam<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, ParameterRetriever, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateByParam(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), ParameterRetriever, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateByParam<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, ParameterRetriever, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateByParam(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), ParameterRetriever, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByParam<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, Seltzr.ParameterRetrievers.ParameterRetriever, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByParam(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), Seltzr.ParameterRetrievers.ParameterRetriever, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateByParam
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 392
      summary: "\nSets this route up to handle a POST update request using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateByParam<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, ParameterRetriever retriever, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateByParam(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), retriever As ParameterRetriever, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: retriever
          type: Seltzr.ParameterRetrievers.ParameterRetriever
          description: The parameter to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByParam*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByParam``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],Seltzr.ParameterRetrievers.ParameterRetriever[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByParam``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],Seltzr.ParameterRetrievers.ParameterRetriever[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateByParam<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], ParameterRetriever[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateByParam(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), ParameterRetriever(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateByParam<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], ParameterRetriever[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateByParam(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), ParameterRetriever(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByParam<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], Seltzr.ParameterRetrievers.ParameterRetriever[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByParam(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), Seltzr.ParameterRetrievers.ParameterRetriever(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateByParam
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 416
      summary: "\nSets this route up to handle a POST update request using an ORM.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateByParam<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, ParameterRetriever[] retrievers, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateByParam(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), retrievers As ParameterRetriever(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when update the model
        - id: retrievers
          type: Seltzr.ParameterRetrievers.ParameterRetriever[]
          description: The parameters to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByParam*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,Seltzr.ParameterRetrievers.ParameterRetriever[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,Seltzr.ParameterRetrievers.ParameterRetriever[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, ParameterRetriever[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, ParameterRetriever(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, ParameterRetriever[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, ParameterRetriever(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, Seltzr.ParameterRetrievers.ParameterRetriever[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, Seltzr.ParameterRetrievers.ParameterRetriever(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 434
      summary: "\nSets this route up to handle a POST update by primary key request using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, ParameterRetriever[] parameters, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, parameters As ParameterRetriever(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: parameters
          type: Seltzr.ParameterRetrievers.ParameterRetriever[]
          description: The parameters that will make up the primary key to filter by
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.String[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.String(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 467
      summary: "\nSets this route up to handle a POST update request by route values using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, string[] parameterNames, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, parameterNames As String(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: parameterNames
          type: System.String[]
          description: The names of the route value parameters to use
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1})
      language: CSharp
      name:
        CSharp: PostUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>)
        VB: PostUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 489
      summary: "\nSets this route up to handle a POST update request by route values using an ORM. The names of the route\nvalues\nwill be camelCased versions of the C# property name. If these route parameters do not already exist they will be\nadded in order, e.g. /key1/key2.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser)) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 505
      summary: "\nSets this route up to handle a POST update request by route values using an ORM. The names of the route\nvalues\nwill be camelCased versions of the C# property name. If these route parameters do not already exist they will be\nadded in order, e.g. /key1/key2.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser))) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 523
      summary: "\nSets a route up to handle a POST update request by route values using an ORM. The names of the route\nvalues\nwill be camelCased versions of the C# property name. If these route parameters do not already exist they will be\nadded in order, e.g. /key1/key2.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 553
      summary: "\nSets a route up to handle a POST update request by route values using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, string parameterName, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, parameterName As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: parameterName
          type: System.String
          description: The name of the route value parameter to use
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.String[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.String(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateByPrimaryKeyQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 572
      summary: "\nSets a route up to handle a POST update request by query parameters using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateByPrimaryKeyQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, string[] parameterNames, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, parameterNames As String(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: parameterNames
          type: System.String[]
          description: The names of the route value parameters to use
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateByPrimaryKeyQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 594
      summary: "\nSets a route up to handle a POST update request by a primary key query parameter using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateByPrimaryKeyQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, string parameterName, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, parameterName As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: parameterName
          type: System.String
          description: The name of the route value parameter to use
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateByPrimaryKeyQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 614
      summary: "\nSets a route up to handle a POST update request by query parameters using an ORM. The names of the\nquery\nparameters will be camelCased names of the primary key of the entity\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateByPrimaryKeyQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateByPrimaryKeyQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 634
      summary: "\nSets this route up to handle a POST update request by query parameters on the same route pattern using Entity\nFramework.\nThe names of the query parameters will be camelCased names of the primary key of the entity\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateByPrimaryKeyQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.String[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.String(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 655
      summary: "\nSets this route up to handle a POST update request using an ORM, comparing the given property with a\nquery parameter to determine which elements to update\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, string[] queryParameters, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), queryParameters As String(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        - id: queryParameters
          type: System.String[]
          description: The query parameter names to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 681
      summary: "\nSets this route up to handle a POST update request using an ORM, comparing the given property with a\nquery parameter to determine which elements to update. The names of the query parameters will be camelCase versions\nof the\nC# properties to compare.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser))) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.String[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.String(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 703
      summary: "\nSets this route up to handle a POST update request using an ORM at the same route pattern, comparing the\ngiven property with a query parameter to determine which elements to update\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, string[] queryParameters, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), queryParameters As String(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        - id: queryParameters
          type: System.String[]
          description: The query parameter names to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 723
      summary: "\nSets this route up to handle a POST update request using an ORM, comparing the given property with a\nquery parameter to determine which elements to update. The names of the query parameters will be camelCase versions\nof the\nC# properties to compare.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser))) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      language: CSharp
      name:
        CSharp: PostUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
        VB: PostUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
        VB: SeltzrOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 741
      summary: "\nSets this route up to handle a POST update request using an ORM, comparing the given property with a\nquery parameter to determine which elements to update. The names of the query parameters will be camelCase versions\nof the\nC# properties to compare.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, params Expression<Func<TModel, object>>[] propertyExpressions)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 759
      summary: "\nSets this route up to handle a POST update request using an ORM, comparing the given property with a\nquery parameter to determine which elements to update\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, string queryParameter, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), queryParameter As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: queryParameter
          type: System.String
          description: The query parameter names to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 783
      summary: "\nSets this route up to handle a POST update request using an ORM, comparing the given property with a\nquery parameter to determine which elements to update\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, string queryParameter, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), queryParameter As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: queryParameter
          type: System.String
          description: The query parameter names to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 805
      summary: "\nSets this route up to handle a POST update request using an ORM at the same route, comparing the given\nproperty with a query parameter to determine which elements to update. The name of the query parameter will be a\ncamelCase\nversion of the C# property to compare. If this query parameter does not yet exist, it will be added to the end of\nthe\nroute pattern.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PostUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PostUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 828
      summary: "\nSets this route up to handle a POST update request using an ORM at the same route, comparing the given\nproperty with a query parameter to determine which elements to update. The name of the query parameter will be a\ncamelCase\nversion of the C# property to compare. If this query parameter does not yet exist, it will be added to the end of\nthe\nroute pattern.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      language: CSharp
      name:
        CSharp: PostUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
        VB: PostUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
        VB: SeltzrOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PostUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PostUpdate.cs
        startLine: 851
      summary: "\nSets this route up to handle a POST update request using an ORM at the same route, comparing the given\nproperty with a query parameter to determine which elements to update. The name of the query parameter will be a\ncamelCase\nversion of the C# property to compare. If this query parameter does not yet exist, it will be added to the end of\nthe\nroute pattern.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PostUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, params Expression<Func<TModel, object>>[] propertyExpressions)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PostUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.String[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.String(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 39
      summary: "\nSets this route up to handle a PUT update request using an ORM, comparing the given property with a\nroute value to determine which elements to update\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, string[] routeValues, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), routeValues As String(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        - id: routeValues
          type: System.String[]
          description: The route value names to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 65
      summary: "\nSets this route up to handle a PUT update request using an ORM, comparing the given property with a\nroute value to determine which elements to update. The names of the route values will be camelCase versions of the\nC# properties to compare. If these route values do not yet exist, they will be added to the end of the route\npattern in order.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser))) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.String[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.String(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 98
      summary: "\nSets this route up to handle a PUT update request using an ORM at the same route pattern, comparing the\ngiven property with a route value to determine which elements to update\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, string[] routeValues, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), routeValues As String(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        - id: routeValues
          type: System.String[]
          description: The route value names to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 118
      summary: "\nSets this route up to handle a PUT update request using an ORM, comparing the given property with a\nroute value to determine which elements to update. The names of the route values will be camelCase versions of the\nC# properties to compare. If these route values do not yet exist, they will be added to the end of the route\npattern in order.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser))) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      language: CSharp
      name:
        CSharp: PutUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
        VB: PutUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
        VB: SeltzrOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 136
      summary: "\nSets this route up to handle a PUT update request using an ORM, comparing the given property with a\nroute value to determine which elements to update. The names of the route values will be camelCase versions of the\nC# properties to compare. If these route values do not yet exist, they will be added to the end of the route\npattern in order.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, params Expression<Func<TModel, object>>[] propertyExpressions)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 154
      summary: "\nSets this route up to handle a PUT update request using an ORM, comparing the given property with a\nroute value to determine which elements to update\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, string routeValue, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), routeValue As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: routeValue
          type: System.String
          description: The route value names to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 174
      summary: "\nSets this route up to handle a PUT update request using an ORM, comparing the given property with a\nroute value to determine which elements to update\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, string routeValue, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), routeValue As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: routeValue
          type: System.String
          description: The route value names to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 194
      summary: "\nSets this route up to handle a PUT update request using an ORM at the same route, comparing the given\nproperty with a route value to determine which elements to update. The name of the route value will be a camelCase\nversion of the C# property to compare. If this route value does not yet exist, it will be added to the end of the\nroute pattern.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 215
      summary: "\nSets this route up to handle a PUT update request using an ORM at the same route, comparing the given\nproperty with a route value to determine which elements to update. The name of the route value will be a camelCase\nversion of the C# property to compare. If this route value does not yet exist, it will be added to the end of the\nroute pattern.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      language: CSharp
      name:
        CSharp: PutUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
        VB: PutUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
        VB: SeltzrOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateBy
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 236
      summary: "\nSets this route up to handle a PUT update request using an ORM at the same route, comparing the given\nproperty with a route value to determine which elements to update. The name of the route value will be a camelCase\nversion of the C# property to compare. If this route value does not yet exist, it will be added to the end of the\nroute pattern.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateBy<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, params Expression<Func<TModel, object>>[] propertyExpressions)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateBy(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateByBody
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 254
      summary: "\nSets this route up to handle a PUT update request using an ORM. The property to compare is assumed to be\ndirectly set in the parsed model\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateByBody<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateByBody(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateByBody
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 273
      summary: "\nSets this route up to handle a PUT update request using an ORM. The property to compare is assumed to be\ndirectly set in the parsed model\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateByBody<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateByBody(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      language: CSharp
      name:
        CSharp: PutUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
        VB: PutUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
        VB: SeltzrOptionsBuilderExtensions.PutUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateByBody
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 290
      summary: "\nSets this route up to handle a PUT update request using an ORM. The properties to compare are assumed to\nbe directly set in the parsed model\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateByBody<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, params Expression<Func<TModel, object>>[] propertyExpressions)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateByBody(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when update the model
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateByBody
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 308
      summary: "\nSets this route up to handle a PUT update request using an ORM. The properties to compare are assumed to\nbe directly set in the parsed model\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateByBody<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateByBody(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser))) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when update the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateByBody
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 326
      summary: "\nSets this route up to handle a PUT update request using an ORM. The properties to compare are assumed to\nbe directly set in the parsed model\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateByBody<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateByBody(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser))) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when update the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      language: CSharp
      name:
        CSharp: PutUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
        VB: PutUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateByBody<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
        VB: SeltzrOptionsBuilderExtensions.PutUpdateByBody(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateByBody
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 342
      summary: "\nSets this route up to handle a PUT update request using an ORM. The properties to compare are assumed to\nbe directly set in the parsed model\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateByBody<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, params Expression<Func<TModel, object>>[] propertyExpressions)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateByBody(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when update the model
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByParam``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],Seltzr.ParameterRetrievers.ParameterRetriever[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByParam``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],Seltzr.ParameterRetrievers.ParameterRetriever[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateByParam<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], ParameterRetriever[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateByParam(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), ParameterRetriever(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateByParam<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], ParameterRetriever[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateByParam(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), ParameterRetriever(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByParam<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], Seltzr.ParameterRetrievers.ParameterRetriever[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByParam(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), Seltzr.ParameterRetrievers.ParameterRetriever(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateByParam
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 359
      summary: "\nSets this route up to handle a PUT update request using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateByParam<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, ParameterRetriever[] retrievers, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateByParam(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), retrievers As ParameterRetriever(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        - id: retrievers
          type: Seltzr.ParameterRetrievers.ParameterRetriever[]
          description: The parameters to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByParam*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByParam``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},Seltzr.ParameterRetrievers.ParameterRetriever,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByParam``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},Seltzr.ParameterRetrievers.ParameterRetriever,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateByParam<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, ParameterRetriever, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateByParam(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), ParameterRetriever, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateByParam<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, ParameterRetriever, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateByParam(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), ParameterRetriever, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByParam<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, Seltzr.ParameterRetrievers.ParameterRetriever, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByParam(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), Seltzr.ParameterRetrievers.ParameterRetriever, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateByParam
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 392
      summary: "\nSets this route up to handle a PUT update request using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateByParam<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, ParameterRetriever retriever, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateByParam(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), retriever As ParameterRetriever, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: retriever
          type: Seltzr.ParameterRetrievers.ParameterRetriever
          description: The parameter to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByParam*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByParam``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],Seltzr.ParameterRetrievers.ParameterRetriever[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByParam``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],Seltzr.ParameterRetrievers.ParameterRetriever[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateByParam<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], ParameterRetriever[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateByParam(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), ParameterRetriever(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateByParam<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], ParameterRetriever[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateByParam(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), ParameterRetriever(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByParam<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], Seltzr.ParameterRetrievers.ParameterRetriever[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByParam(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), Seltzr.ParameterRetrievers.ParameterRetriever(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateByParam
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 416
      summary: "\nSets this route up to handle a PUT update request using an ORM.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateByParam<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, ParameterRetriever[] retrievers, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateByParam(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), retrievers As ParameterRetriever(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when update the model
        - id: retrievers
          type: Seltzr.ParameterRetrievers.ParameterRetriever[]
          description: The parameters to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByParam*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,Seltzr.ParameterRetrievers.ParameterRetriever[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,Seltzr.ParameterRetrievers.ParameterRetriever[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, ParameterRetriever[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, ParameterRetriever(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, ParameterRetriever[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, ParameterRetriever(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, Seltzr.ParameterRetrievers.ParameterRetriever[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, Seltzr.ParameterRetrievers.ParameterRetriever(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 434
      summary: "\nSets this route up to handle a PUT update by primary key request using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, ParameterRetriever[] parameters, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, parameters As ParameterRetriever(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: parameters
          type: Seltzr.ParameterRetrievers.ParameterRetriever[]
          description: The parameters that will make up the primary key to filter by
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.String[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.String(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 467
      summary: "\nSets this route up to handle a PUT update request by route values using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, string[] parameterNames, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, parameterNames As String(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: parameterNames
          type: System.String[]
          description: The names of the route value parameters to use
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1})
      language: CSharp
      name:
        CSharp: PutUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>)
        VB: PutUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 489
      summary: "\nSets this route up to handle a PUT update request by route values using an ORM. The names of the route\nvalues\nwill be camelCased versions of the C# property name. If these route parameters do not already exist they will be\nadded in order, e.g. /key1/key2.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser)) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 505
      summary: "\nSets this route up to handle a PUT update request by route values using an ORM. The names of the route\nvalues\nwill be camelCased versions of the C# property name. If these route parameters do not already exist they will be\nadded in order, e.g. /key1/key2.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser))) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 523
      summary: "\nSets a route up to handle a PUT update request by route values using an ORM. The names of the route\nvalues\nwill be camelCased versions of the C# property name. If these route parameters do not already exist they will be\nadded in order, e.g. /key1/key2.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateByPrimaryKey
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 553
      summary: "\nSets a route up to handle a PUT update request by route values using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateByPrimaryKey<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, string parameterName, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, parameterName As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: parameterName
          type: System.String
          description: The name of the route value parameter to use
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.String[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.String(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateByPrimaryKeyQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 572
      summary: "\nSets a route up to handle a PUT update request by query parameters using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateByPrimaryKeyQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, string[] parameterNames, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, parameterNames As String(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: parameterNames
          type: System.String[]
          description: The names of the route value parameters to use
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateByPrimaryKeyQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 594
      summary: "\nSets a route up to handle a PUT update request by a primary key query parameter using an ORM\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateByPrimaryKeyQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, string parameterName, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, parameterName As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: parameterName
          type: System.String
          description: The name of the route value parameter to use
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateByPrimaryKeyQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 614
      summary: "\nSets a route up to handle a PUT update request by query parameters using an ORM. The names of the\nquery\nparameters will be camelCased names of the primary key of the entity\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateByPrimaryKeyQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateByPrimaryKeyQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 634
      summary: "\nSets this route up to handle a PUT update request by query parameters on the same route pattern using Entity\nFramework.\nThe names of the query parameters will be camelCased names of the primary key of the entity\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateByPrimaryKeyQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.String[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.String(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 655
      summary: "\nSets this route up to handle a PUT update request using an ORM, comparing the given property with a\nquery parameter to determine which elements to update\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, string[] queryParameters, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), queryParameters As String(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        - id: queryParameters
          type: System.String[]
          description: The query parameter names to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 681
      summary: "\nSets this route up to handle a PUT update request using an ORM, comparing the given property with a\nquery parameter to determine which elements to update. The names of the query parameters will be camelCase versions\nof the\nC# properties to compare.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser))) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], String[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), String(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.String[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.String(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 703
      summary: "\nSets this route up to handle a PUT update request using an ORM at the same route pattern, comparing the\ngiven property with a query parameter to determine which elements to update\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, string[] queryParameters, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), queryParameters As String(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        - id: queryParameters
          type: System.String[]
          description: The query parameter names to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 723
      summary: "\nSets this route up to handle a PUT update request using an ORM, comparing the given property with a\nquery parameter to determine which elements to update. The names of the query parameters will be camelCase versions\nof the\nC# properties to compare.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser))) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      language: CSharp
      name:
        CSharp: PutUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
        VB: PutUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
        VB: SeltzrOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 741
      summary: "\nSets this route up to handle a PUT update request using an ORM, comparing the given property with a\nquery parameter to determine which elements to update. The names of the query parameters will be camelCase versions\nof the\nC# properties to compare.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, params Expression<Func<TModel, object>>[] propertyExpressions)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 759
      summary: "\nSets this route up to handle a PUT update request using an ORM, comparing the given property with a\nquery parameter to determine which elements to update\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, string queryParameter, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), queryParameter As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: queryParameter
          type: System.String
          description: The query parameter names to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, String, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), String, Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.String, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.String, System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 783
      summary: "\nSets this route up to handle a PUT update request using an ORM, comparing the given property with a\nquery parameter to determine which elements to update\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, string queryParameter, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), queryParameter As String, optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: queryParameter
          type: System.String
          description: The query parameter names to use to get the property values for a request
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 805
      summary: "\nSets this route up to handle a PUT update request using an ORM at the same route, comparing the given\nproperty with a query parameter to determine which elements to update. The name of the query parameter will be a\ncamelCase\nversion of the C# property to compare. If this query parameter does not yet exist, it will be added to the end of\nthe\nroute pattern.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}})
      language: CSharp
      name:
        CSharp: PutUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: PutUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<SeltzrOptionsBuilder<TModel, TUser>>)
        VB: SeltzrOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of SeltzrOptionsBuilder(Of TModel, TUser)))
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>>)
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser)))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 828
      summary: "\nSets this route up to handle a PUT update request using an ORM at the same route, comparing the given\nproperty with a query parameter to determine which elements to update. The name of the query parameter will be a\ncamelCase\nversion of the C# property to compare. If this query parameter does not yet exist, it will be added to the end of\nthe\nroute pattern.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, Action<SeltzrOptionsBuilder<TModel, TUser>> optionsHandler = null)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of SeltzrOptionsBuilder(Of TModel, TUser)) = Nothing) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpression
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
          description: An expression representing the property to compare when updating the model
        - id: optionsHandler
          type: System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}
          description: A handler for the route options
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    - isExtensionMethod: true
      id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      commentId: M:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery``2(Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
      language: CSharp
      name:
        CSharp: PutUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
        VB: PutUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
      nameWithType:
        CSharp: SeltzrOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(SeltzrOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
        VB: SeltzrOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(SeltzrOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
      qualifiedName:
        CSharp: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(Seltzr.Options.Builder.SeltzrOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
        VB: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(Seltzr.Options.Builder.SeltzrOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.Extensions
      source:
        remote:
          path: Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PutUpdateByQuery
        path: ../../Seltzr.OrmBase/Extensions/SeltzrOptionsBuilderExtensions.PutUpdate.cs
        startLine: 851
      summary: "\nSets this route up to handle a PUT update request using an ORM at the same route, comparing the given\nproperty with a query parameter to determine which elements to update. The name of the query parameter will be a\ncamelCase\nversion of the C# property to compare. If this query parameter does not yet exist, it will be added to the end of\nthe\nroute pattern.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static SeltzrOptionsBuilder<TModel, TUser> PutUpdateByQuery<TModel, TUser>(this SeltzrOptionsBuilder<TModel, TUser> builder, string routePattern, params Expression<Func<TModel, object>>[] propertyExpressions)

                where TModel : class where TUser : class
          VB: >-
            <ExtensionAttribute>

            Public Shared Function PutUpdateByQuery(Of TModel As Class, TUser As Class)(builder As SeltzrOptionsBuilder(Of TModel, TUser), routePattern As String, ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As SeltzrOptionsBuilder(Of TModel, TUser)
        parameters:
        - id: builder
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: The options builder to perform the operation on
        - id: routePattern
          type: System.String
          description: The route pattern to set up the request for
        - id: propertyExpressions
          type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
          description: Expressions representing the properties to compare when updating the model
        typeParameters:
        - id: TModel
          description: The model type that the API is being built for
        - id: TUser
          description: The type of authenticated user context
        return:
          type: Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}
          description: This <xref href="Seltzr.Options.Builder.SeltzrOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
      overload: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
    references:
      Seltzr.Options.Builder.SeltzrOptionsBuilder`2: 
- id: Seltzr.OrmBase
  commentId: N:Seltzr.OrmBase
  language: CSharp
  name:
    CSharp: Seltzr.OrmBase
    VB: Seltzr.OrmBase
  nameWithType:
    CSharp: Seltzr.OrmBase
    VB: Seltzr.OrmBase
  qualifiedName:
    CSharp: Seltzr.OrmBase
    VB: Seltzr.OrmBase
  type: Namespace
  assemblies:
  - Seltzr.OrmBase
  modifiers: {}
  items:
  - id: Seltzr.OrmBase.IOrmDataProvider`2
    commentId: T:Seltzr.OrmBase.IOrmDataProvider`2
    language: CSharp
    name:
      CSharp: IOrmDataProvider<TModel, TUser>
      VB: IOrmDataProvider(Of TModel, TUser)
    nameWithType:
      CSharp: IOrmDataProvider<TModel, TUser>
      VB: IOrmDataProvider(Of TModel, TUser)
    qualifiedName:
      CSharp: Seltzr.OrmBase.IOrmDataProvider<TModel, TUser>
      VB: Seltzr.OrmBase.IOrmDataProvider(Of TModel, TUser)
    type: Interface
    assemblies:
    - Seltzr.OrmBase
    namespace: Seltzr.OrmBase
    source:
      remote:
        path: Seltzr.OrmBase/IOrmDataProvider.cs
        branch: master
        repo: git@github.com:jlynch630/RestModels.git
      id: IOrmDataProvider
      path: ../../Seltzr.OrmBase/IOrmDataProvider.cs
      startLine: 13
    syntax:
      content:
        CSharp: >-
          public interface IOrmDataProvider<TModel, TUser>

              where TModel : class where TUser : class
        VB: Public Interface IOrmDataProvider(Of TModel As Class, TUser As Class)
      typeParameters:
      - id: TModel
      - id: TUser
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Seltzr.OrmBase.IOrmDataProvider`2.GetModels(Seltzr.Context.IApiContext{`0,System.Object})
      commentId: M:Seltzr.OrmBase.IOrmDataProvider`2.GetModels(Seltzr.Context.IApiContext{`0,System.Object})
      language: CSharp
      name:
        CSharp: GetModels(IApiContext<TModel, Object>)
        VB: GetModels(IApiContext(Of TModel, Object))
      nameWithType:
        CSharp: IOrmDataProvider<TModel, TUser>.GetModels(IApiContext<TModel, Object>)
        VB: IOrmDataProvider(Of TModel, TUser).GetModels(IApiContext(Of TModel, Object))
      qualifiedName:
        CSharp: Seltzr.OrmBase.IOrmDataProvider<TModel, TUser>.GetModels(Seltzr.Context.IApiContext<TModel, System.Object>)
        VB: Seltzr.OrmBase.IOrmDataProvider(Of TModel, TUser).GetModels(Seltzr.Context.IApiContext(Of TModel, System.Object))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.OrmBase
      source:
        remote:
          path: Seltzr.OrmBase/IOrmDataProvider.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: GetModels
        path: ../../Seltzr.OrmBase/IOrmDataProvider.cs
        startLine: 14
      syntax:
        content:
          CSharp: IQueryable<TModel> GetModels(IApiContext<TModel, object> context)
          VB: Function GetModels(context As IApiContext(Of TModel, Object)) As IQueryable(Of TModel)
        parameters:
        - id: context
          type: Seltzr.Context.IApiContext{{TModel},System.Object}
        return:
          type: System.Linq.IQueryable{{TModel}}
      overload: Seltzr.OrmBase.IOrmDataProvider`2.GetModels*
      modifiers:
        CSharp: []
        VB: []
    - id: Seltzr.OrmBase.IOrmDataProvider`2.GetPrimaryKey
      commentId: M:Seltzr.OrmBase.IOrmDataProvider`2.GetPrimaryKey
      language: CSharp
      name:
        CSharp: GetPrimaryKey()
        VB: GetPrimaryKey()
      nameWithType:
        CSharp: IOrmDataProvider<TModel, TUser>.GetPrimaryKey()
        VB: IOrmDataProvider(Of TModel, TUser).GetPrimaryKey()
      qualifiedName:
        CSharp: Seltzr.OrmBase.IOrmDataProvider<TModel, TUser>.GetPrimaryKey()
        VB: Seltzr.OrmBase.IOrmDataProvider(Of TModel, TUser).GetPrimaryKey()
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.OrmBase
      source:
        remote:
          path: Seltzr.OrmBase/IOrmDataProvider.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: GetPrimaryKey
        path: ../../Seltzr.OrmBase/IOrmDataProvider.cs
        startLine: 16
      syntax:
        content:
          CSharp: List<KeyProperty> GetPrimaryKey()
          VB: Function GetPrimaryKey As List(Of KeyProperty)
        return:
          type: System.Collections.Generic.List{Seltzr.OrmBase.KeyProperty}
      overload: Seltzr.OrmBase.IOrmDataProvider`2.GetPrimaryKey*
      modifiers:
        CSharp: []
        VB: []
    - id: Seltzr.OrmBase.IOrmDataProvider`2.GetCreateOperation
      commentId: M:Seltzr.OrmBase.IOrmDataProvider`2.GetCreateOperation
      language: CSharp
      name:
        CSharp: GetCreateOperation()
        VB: GetCreateOperation()
      nameWithType:
        CSharp: IOrmDataProvider<TModel, TUser>.GetCreateOperation()
        VB: IOrmDataProvider(Of TModel, TUser).GetCreateOperation()
      qualifiedName:
        CSharp: Seltzr.OrmBase.IOrmDataProvider<TModel, TUser>.GetCreateOperation()
        VB: Seltzr.OrmBase.IOrmDataProvider(Of TModel, TUser).GetCreateOperation()
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.OrmBase
      source:
        remote:
          path: Seltzr.OrmBase/IOrmDataProvider.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: GetCreateOperation
        path: ../../Seltzr.OrmBase/IOrmDataProvider.cs
        startLine: 18
      syntax:
        content:
          CSharp: IOperation<TModel, TUser> GetCreateOperation()
          VB: Function GetCreateOperation As IOperation(Of TModel, TUser)
        return:
          type: Seltzr.Operations.IOperation{{TModel},{TUser}}
      overload: Seltzr.OrmBase.IOrmDataProvider`2.GetCreateOperation*
      modifiers:
        CSharp: []
        VB: []
    - id: Seltzr.OrmBase.IOrmDataProvider`2.GetUpdateOperation(System.Reflection.PropertyInfo[],Seltzr.ParameterRetrievers.ParameterRetriever[])
      commentId: M:Seltzr.OrmBase.IOrmDataProvider`2.GetUpdateOperation(System.Reflection.PropertyInfo[],Seltzr.ParameterRetrievers.ParameterRetriever[])
      language: CSharp
      name:
        CSharp: GetUpdateOperation(PropertyInfo[], ParameterRetriever[])
        VB: GetUpdateOperation(PropertyInfo(), ParameterRetriever())
      nameWithType:
        CSharp: IOrmDataProvider<TModel, TUser>.GetUpdateOperation(PropertyInfo[], ParameterRetriever[])
        VB: IOrmDataProvider(Of TModel, TUser).GetUpdateOperation(PropertyInfo(), ParameterRetriever())
      qualifiedName:
        CSharp: Seltzr.OrmBase.IOrmDataProvider<TModel, TUser>.GetUpdateOperation(System.Reflection.PropertyInfo[], Seltzr.ParameterRetrievers.ParameterRetriever[])
        VB: Seltzr.OrmBase.IOrmDataProvider(Of TModel, TUser).GetUpdateOperation(System.Reflection.PropertyInfo(), Seltzr.ParameterRetrievers.ParameterRetriever())
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.OrmBase
      source:
        remote:
          path: Seltzr.OrmBase/IOrmDataProvider.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: GetUpdateOperation
        path: ../../Seltzr.OrmBase/IOrmDataProvider.cs
        startLine: 20
      syntax:
        content:
          CSharp: IOperation<TModel, TUser> GetUpdateOperation(PropertyInfo[] properties, ParameterRetriever[] retrievers)
          VB: Function GetUpdateOperation(properties As PropertyInfo(), retrievers As ParameterRetriever()) As IOperation(Of TModel, TUser)
        parameters:
        - id: properties
          type: System.Reflection.PropertyInfo[]
        - id: retrievers
          type: Seltzr.ParameterRetrievers.ParameterRetriever[]
        return:
          type: Seltzr.Operations.IOperation{{TModel},{TUser}}
      overload: Seltzr.OrmBase.IOrmDataProvider`2.GetUpdateOperation*
      modifiers:
        CSharp: []
        VB: []
    - id: Seltzr.OrmBase.IOrmDataProvider`2.GetDeleteOperation
      commentId: M:Seltzr.OrmBase.IOrmDataProvider`2.GetDeleteOperation
      language: CSharp
      name:
        CSharp: GetDeleteOperation()
        VB: GetDeleteOperation()
      nameWithType:
        CSharp: IOrmDataProvider<TModel, TUser>.GetDeleteOperation()
        VB: IOrmDataProvider(Of TModel, TUser).GetDeleteOperation()
      qualifiedName:
        CSharp: Seltzr.OrmBase.IOrmDataProvider<TModel, TUser>.GetDeleteOperation()
        VB: Seltzr.OrmBase.IOrmDataProvider(Of TModel, TUser).GetDeleteOperation()
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.OrmBase
      source:
        remote:
          path: Seltzr.OrmBase/IOrmDataProvider.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: GetDeleteOperation
        path: ../../Seltzr.OrmBase/IOrmDataProvider.cs
        startLine: 22
      syntax:
        content:
          CSharp: IOperation<TModel, TUser> GetDeleteOperation()
          VB: Function GetDeleteOperation As IOperation(Of TModel, TUser)
        return:
          type: Seltzr.Operations.IOperation{{TModel},{TUser}}
      overload: Seltzr.OrmBase.IOrmDataProvider`2.GetDeleteOperation*
      modifiers:
        CSharp: []
        VB: []
  - id: Seltzr.OrmBase.KeyProperty
    commentId: T:Seltzr.OrmBase.KeyProperty
    language: CSharp
    name:
      CSharp: KeyProperty
      VB: KeyProperty
    nameWithType:
      CSharp: KeyProperty
      VB: KeyProperty
    qualifiedName:
      CSharp: Seltzr.OrmBase.KeyProperty
      VB: Seltzr.OrmBase.KeyProperty
    type: Class
    assemblies:
    - Seltzr.OrmBase
    namespace: Seltzr.OrmBase
    source:
      remote:
        path: Seltzr.OrmBase/KeyProperty.cs
        branch: master
        repo: git@github.com:jlynch630/RestModels.git
      id: KeyProperty
      path: ../../Seltzr.OrmBase/KeyProperty.cs
      startLine: 13
    summary: "\nA property that makes up a part of a PrimaryKey\n"
    example: []
    syntax:
      content:
        CSharp: public class KeyProperty
        VB: Public Class KeyProperty
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Seltzr.OrmBase.KeyProperty.#ctor(System.Reflection.PropertyInfo)
      commentId: M:Seltzr.OrmBase.KeyProperty.#ctor(System.Reflection.PropertyInfo)
      language: CSharp
      name:
        CSharp: KeyProperty(PropertyInfo)
        VB: KeyProperty(PropertyInfo)
      nameWithType:
        CSharp: KeyProperty.KeyProperty(PropertyInfo)
        VB: KeyProperty.KeyProperty(PropertyInfo)
      qualifiedName:
        CSharp: Seltzr.OrmBase.KeyProperty.KeyProperty(System.Reflection.PropertyInfo)
        VB: Seltzr.OrmBase.KeyProperty.KeyProperty(System.Reflection.PropertyInfo)
      type: Constructor
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.OrmBase
      source:
        remote:
          path: Seltzr.OrmBase/KeyProperty.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: .ctor
        path: ../../Seltzr.OrmBase/KeyProperty.cs
        startLine: 19
      summary: "\nInitializes a new instance of the <xref href=\"Seltzr.OrmBase.KeyProperty\" data-throw-if-not-resolved=\"false\"></xref> class, with the name set to the name of the given\n<xref href=\"Seltzr.OrmBase.KeyProperty.PropertyInfo\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: public KeyProperty(PropertyInfo propertyInfo)
          VB: Public Sub New(propertyInfo As PropertyInfo)
        parameters:
        - id: propertyInfo
          type: System.Reflection.PropertyInfo
          description: The key property
      overload: Seltzr.OrmBase.KeyProperty.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Seltzr.OrmBase.KeyProperty: 
        Seltzr.OrmBase.KeyProperty.PropertyInfo: 
    - id: Seltzr.OrmBase.KeyProperty.#ctor(System.String,System.Reflection.PropertyInfo)
      commentId: M:Seltzr.OrmBase.KeyProperty.#ctor(System.String,System.Reflection.PropertyInfo)
      language: CSharp
      name:
        CSharp: KeyProperty(String, PropertyInfo)
        VB: KeyProperty(String, PropertyInfo)
      nameWithType:
        CSharp: KeyProperty.KeyProperty(String, PropertyInfo)
        VB: KeyProperty.KeyProperty(String, PropertyInfo)
      qualifiedName:
        CSharp: Seltzr.OrmBase.KeyProperty.KeyProperty(System.String, System.Reflection.PropertyInfo)
        VB: Seltzr.OrmBase.KeyProperty.KeyProperty(System.String, System.Reflection.PropertyInfo)
      type: Constructor
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.OrmBase
      source:
        remote:
          path: Seltzr.OrmBase/KeyProperty.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: .ctor
        path: ../../Seltzr.OrmBase/KeyProperty.cs
        startLine: 27
      summary: "\nInitializes a new instance of the <xref href=\"Seltzr.OrmBase.KeyProperty\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
      example: []
      syntax:
        content:
          CSharp: public KeyProperty(string name, PropertyInfo propertyInfo)
          VB: Public Sub New(name As String, propertyInfo As PropertyInfo)
        parameters:
        - id: name
          type: System.String
          description: The name of the property
        - id: propertyInfo
          type: System.Reflection.PropertyInfo
          description: The key property
      overload: Seltzr.OrmBase.KeyProperty.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Seltzr.OrmBase.KeyProperty: 
    - id: Seltzr.OrmBase.KeyProperty.Name
      commentId: P:Seltzr.OrmBase.KeyProperty.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: KeyProperty.Name
        VB: KeyProperty.Name
      qualifiedName:
        CSharp: Seltzr.OrmBase.KeyProperty.Name
        VB: Seltzr.OrmBase.KeyProperty.Name
      type: Property
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.OrmBase
      source:
        remote:
          path: Seltzr.OrmBase/KeyProperty.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: Name
        path: ../../Seltzr.OrmBase/KeyProperty.cs
        startLine: 35
      summary: "\nGets the name of the key property\n"
      example: []
      syntax:
        content:
          CSharp: public string Name { get; }
          VB: Public ReadOnly Property Name As String
        parameters: []
        return:
          type: System.String
      overload: Seltzr.OrmBase.KeyProperty.Name*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Seltzr.OrmBase.KeyProperty.PropertyInfo
      commentId: P:Seltzr.OrmBase.KeyProperty.PropertyInfo
      language: CSharp
      name:
        CSharp: PropertyInfo
        VB: PropertyInfo
      nameWithType:
        CSharp: KeyProperty.PropertyInfo
        VB: KeyProperty.PropertyInfo
      qualifiedName:
        CSharp: Seltzr.OrmBase.KeyProperty.PropertyInfo
        VB: Seltzr.OrmBase.KeyProperty.PropertyInfo
      type: Property
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.OrmBase
      source:
        remote:
          path: Seltzr.OrmBase/KeyProperty.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: PropertyInfo
        path: ../../Seltzr.OrmBase/KeyProperty.cs
        startLine: 40
      summary: "\nGets the key property\n"
      example: []
      syntax:
        content:
          CSharp: public PropertyInfo PropertyInfo { get; }
          VB: Public ReadOnly Property PropertyInfo As PropertyInfo
        parameters: []
        return:
          type: System.Reflection.PropertyInfo
      overload: Seltzr.OrmBase.KeyProperty.PropertyInfo*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
- id: Seltzr.OrmBase.Filters
  commentId: N:Seltzr.OrmBase.Filters
  language: CSharp
  name:
    CSharp: Seltzr.OrmBase.Filters
    VB: Seltzr.OrmBase.Filters
  nameWithType:
    CSharp: Seltzr.OrmBase.Filters
    VB: Seltzr.OrmBase.Filters
  qualifiedName:
    CSharp: Seltzr.OrmBase.Filters
    VB: Seltzr.OrmBase.Filters
  type: Namespace
  assemblies:
  - Seltzr.OrmBase
  modifiers: {}
  items:
  - id: Seltzr.OrmBase.Filters.PrimaryKeyFilter`1
    commentId: T:Seltzr.OrmBase.Filters.PrimaryKeyFilter`1
    language: CSharp
    name:
      CSharp: PrimaryKeyFilter<TModel>
      VB: PrimaryKeyFilter(Of TModel)
    nameWithType:
      CSharp: PrimaryKeyFilter<TModel>
      VB: PrimaryKeyFilter(Of TModel)
    qualifiedName:
      CSharp: Seltzr.OrmBase.Filters.PrimaryKeyFilter<TModel>
      VB: Seltzr.OrmBase.Filters.PrimaryKeyFilter(Of TModel)
    type: Class
    assemblies:
    - Seltzr.OrmBase
    namespace: Seltzr.OrmBase.Filters
    source:
      remote:
        path: Seltzr.OrmBase/Filters/PrimaryKeyFilter.cs
        branch: master
        repo: git@github.com:jlynch630/RestModels.git
      id: PrimaryKeyFilter
      path: ../../Seltzr.OrmBase/Filters/PrimaryKeyFilter.cs
      startLine: 25
    summary: "\nA filter that filters the dataset by the primary key of the model.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PrimaryKeyFilter<TModel> : IFilter<TModel>, IFilter<TModel, object> where TModel : class'
        VB: >-
          Public Class PrimaryKeyFilter(Of TModel As Class)

              Implements IFilter(Of TModel), IFilter(Of TModel, Object)
      typeParameters:
      - id: TModel
        description: The type of model being filtered
    inheritance:
    - System.Object
    implements:
    - Seltzr.Filters.IFilter{{TModel}}
    - Seltzr.Filters.IFilter{{TModel},System.Object}
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Seltzr.OrmBase.Filters.PrimaryKeyFilter`1.#ctor(System.Collections.Generic.List{Seltzr.OrmBase.KeyProperty},Seltzr.ParameterRetrievers.ParameterRetriever[])
      commentId: M:Seltzr.OrmBase.Filters.PrimaryKeyFilter`1.#ctor(System.Collections.Generic.List{Seltzr.OrmBase.KeyProperty},Seltzr.ParameterRetrievers.ParameterRetriever[])
      language: CSharp
      name:
        CSharp: PrimaryKeyFilter(List<KeyProperty>, ParameterRetriever[])
        VB: PrimaryKeyFilter(List(Of KeyProperty), ParameterRetriever())
      nameWithType:
        CSharp: PrimaryKeyFilter<TModel>.PrimaryKeyFilter(List<KeyProperty>, ParameterRetriever[])
        VB: PrimaryKeyFilter(Of TModel).PrimaryKeyFilter(List(Of KeyProperty), ParameterRetriever())
      qualifiedName:
        CSharp: Seltzr.OrmBase.Filters.PrimaryKeyFilter<TModel>.PrimaryKeyFilter(System.Collections.Generic.List<Seltzr.OrmBase.KeyProperty>, Seltzr.ParameterRetrievers.ParameterRetriever[])
        VB: Seltzr.OrmBase.Filters.PrimaryKeyFilter(Of TModel).PrimaryKeyFilter(System.Collections.Generic.List(Of Seltzr.OrmBase.KeyProperty), Seltzr.ParameterRetrievers.ParameterRetriever())
      type: Constructor
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.OrmBase.Filters
      source:
        remote:
          path: Seltzr.OrmBase/Filters/PrimaryKeyFilter.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: .ctor
        path: ../../Seltzr.OrmBase/Filters/PrimaryKeyFilter.cs
        startLine: 41
      summary: "\nInitializes a new instance of the <see cref=\"!:PrimaryKeyFilter&lt;TModel,TContext>\"></see> class.\n"
      example: []
      syntax:
        content:
          CSharp: public PrimaryKeyFilter(List<KeyProperty> primaryKey, ParameterRetriever[] parameters)
          VB: Public Sub New(primaryKey As List(Of KeyProperty), parameters As ParameterRetriever())
        parameters:
        - id: primaryKey
          type: System.Collections.Generic.List{Seltzr.OrmBase.KeyProperty}
        - id: parameters
          type: Seltzr.ParameterRetrievers.ParameterRetriever[]
          description: The parameters for the primary keys, in the order of the keys
      overload: Seltzr.OrmBase.Filters.PrimaryKeyFilter`1.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Seltzr.OrmBase.Filters.PrimaryKeyFilter`1.FilterDataAsync(Seltzr.Context.IApiContext{`0,System.Object},System.Linq.IQueryable{`0})
      commentId: M:Seltzr.OrmBase.Filters.PrimaryKeyFilter`1.FilterDataAsync(Seltzr.Context.IApiContext{`0,System.Object},System.Linq.IQueryable{`0})
      language: CSharp
      name:
        CSharp: FilterDataAsync(IApiContext<TModel, Object>, IQueryable<TModel>)
        VB: FilterDataAsync(IApiContext(Of TModel, Object), IQueryable(Of TModel))
      nameWithType:
        CSharp: PrimaryKeyFilter<TModel>.FilterDataAsync(IApiContext<TModel, Object>, IQueryable<TModel>)
        VB: PrimaryKeyFilter(Of TModel).FilterDataAsync(IApiContext(Of TModel, Object), IQueryable(Of TModel))
      qualifiedName:
        CSharp: Seltzr.OrmBase.Filters.PrimaryKeyFilter<TModel>.FilterDataAsync(Seltzr.Context.IApiContext<TModel, System.Object>, System.Linq.IQueryable<TModel>)
        VB: Seltzr.OrmBase.Filters.PrimaryKeyFilter(Of TModel).FilterDataAsync(Seltzr.Context.IApiContext(Of TModel, System.Object), System.Linq.IQueryable(Of TModel))
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.OrmBase.Filters
      source:
        remote:
          path: Seltzr.OrmBase/Filters/PrimaryKeyFilter.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: FilterDataAsync
        path: ../../Seltzr.OrmBase/Filters/PrimaryKeyFilter.cs
        startLine: 52
      summary: "\nFilters the model dataset by the primary key obtained from the request context\n"
      example: []
      syntax:
        content:
          CSharp: public Task<IQueryable<TModel>> FilterDataAsync(IApiContext<TModel, object> context, IQueryable<TModel> dataset)
          VB: Public Function FilterDataAsync(context As IApiContext(Of TModel, Object), dataset As IQueryable(Of TModel)) As Task(Of IQueryable(Of TModel))
        parameters:
        - id: context
          type: Seltzr.Context.IApiContext{{TModel},System.Object}
          description: The current API context
        - id: dataset
          type: System.Linq.IQueryable{{TModel}}
          description: The current dataset to be filtered
        return:
          type: System.Threading.Tasks.Task{System.Linq.IQueryable{{TModel}}}
          description: The filtered dataset
      overload: Seltzr.OrmBase.Filters.PrimaryKeyFilter`1.FilterDataAsync*
      implements:
      - Seltzr.Filters.IFilter{{TModel},System.Object}.FilterDataAsync(Seltzr.Context.IApiContext{{TModel},System.Object},System.Linq.IQueryable{{TModel}})
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Seltzr.OrmBase.Options
  commentId: N:Seltzr.OrmBase.Options
  language: CSharp
  name:
    CSharp: Seltzr.OrmBase.Options
    VB: Seltzr.OrmBase.Options
  nameWithType:
    CSharp: Seltzr.OrmBase.Options
    VB: Seltzr.OrmBase.Options
  qualifiedName:
    CSharp: Seltzr.OrmBase.Options
    VB: Seltzr.OrmBase.Options
  type: Namespace
  assemblies:
  - Seltzr.OrmBase
  modifiers: {}
  items:
  - id: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2
    commentId: T:Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2
    language: CSharp
    name:
      CSharp: IOrmSeltzrOptionsBuilder<TModel, TUser>
      VB: IOrmSeltzrOptionsBuilder(Of TModel, TUser)
    nameWithType:
      CSharp: IOrmSeltzrOptionsBuilder<TModel, TUser>
      VB: IOrmSeltzrOptionsBuilder(Of TModel, TUser)
    qualifiedName:
      CSharp: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder<TModel, TUser>
      VB: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder(Of TModel, TUser)
    type: Interface
    assemblies:
    - Seltzr.OrmBase
    namespace: Seltzr.OrmBase.Options
    source:
      remote:
        path: Seltzr.OrmBase/Options/IOrmSeltzrOptionsBuilder.cs
        branch: master
        repo: git@github.com:jlynch630/RestModels.git
      id: IOrmSeltzrOptionsBuilder
      path: ../../Seltzr.OrmBase/Options/IOrmSeltzrOptionsBuilder.cs
      startLine: 18
    summary: Contract for an options builder for an ORM-based API
    example: []
    syntax:
      content:
        CSharp: >-
          public interface IOrmSeltzrOptionsBuilder<TModel, in TUser>

              where TModel : class where TUser : class
        VB: Public Interface IOrmSeltzrOptionsBuilder(Of TModel As Class, In TUser As Class)
      typeParameters:
      - id: TModel
        description: The model type that the API is being built for
      - id: TUser
        description: The type of authenticated user context
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2.GetPrimaryKey
      commentId: M:Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2.GetPrimaryKey
      language: CSharp
      name:
        CSharp: GetPrimaryKey()
        VB: GetPrimaryKey()
      nameWithType:
        CSharp: IOrmSeltzrOptionsBuilder<TModel, TUser>.GetPrimaryKey()
        VB: IOrmSeltzrOptionsBuilder(Of TModel, TUser).GetPrimaryKey()
      qualifiedName:
        CSharp: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder<TModel, TUser>.GetPrimaryKey()
        VB: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder(Of TModel, TUser).GetPrimaryKey()
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.OrmBase.Options
      source:
        remote:
          path: Seltzr.OrmBase/Options/IOrmSeltzrOptionsBuilder.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: GetPrimaryKey
        path: ../../Seltzr.OrmBase/Options/IOrmSeltzrOptionsBuilder.cs
        startLine: 24
      summary: "\nGets the properties that make up the primary key of <see cref=\"!:TModel\"></see>\n"
      example: []
      syntax:
        content:
          CSharp: List<KeyProperty> GetPrimaryKey()
          VB: Function GetPrimaryKey As List(Of KeyProperty)
        return:
          type: System.Collections.Generic.List{Seltzr.OrmBase.KeyProperty}
          description: The properties that make up the primary key of <see cref="!:TModel"></see>
      overload: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2.GetPrimaryKey*
      modifiers:
        CSharp: []
        VB: []
    - id: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2.GetCreateOperation
      commentId: M:Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2.GetCreateOperation
      language: CSharp
      name:
        CSharp: GetCreateOperation()
        VB: GetCreateOperation()
      nameWithType:
        CSharp: IOrmSeltzrOptionsBuilder<TModel, TUser>.GetCreateOperation()
        VB: IOrmSeltzrOptionsBuilder(Of TModel, TUser).GetCreateOperation()
      qualifiedName:
        CSharp: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder<TModel, TUser>.GetCreateOperation()
        VB: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder(Of TModel, TUser).GetCreateOperation()
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.OrmBase.Options
      source:
        remote:
          path: Seltzr.OrmBase/Options/IOrmSeltzrOptionsBuilder.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: GetCreateOperation
        path: ../../Seltzr.OrmBase/Options/IOrmSeltzrOptionsBuilder.cs
        startLine: 30
      summary: "\nGets a create <xref href=\"Seltzr.Operations.IOperation%602\" data-throw-if-not-resolved=\"false\"></xref> for this model\n"
      example: []
      syntax:
        content:
          CSharp: IOperation<TModel, TUser> GetCreateOperation()
          VB: Function GetCreateOperation As IOperation(Of TModel, TUser)
        return:
          type: Seltzr.Operations.IOperation{{TModel},{TUser}}
          description: A new create operation for <see cref="!:TModel"></see>
      overload: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2.GetCreateOperation*
      modifiers:
        CSharp: []
        VB: []
      references:
        Seltzr.Operations.IOperation`2: 
    - id: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2.GetUpdateOperation(System.Reflection.PropertyInfo[],Seltzr.ParameterRetrievers.ParameterRetriever[])
      commentId: M:Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2.GetUpdateOperation(System.Reflection.PropertyInfo[],Seltzr.ParameterRetrievers.ParameterRetriever[])
      language: CSharp
      name:
        CSharp: GetUpdateOperation(PropertyInfo[], ParameterRetriever[])
        VB: GetUpdateOperation(PropertyInfo(), ParameterRetriever())
      nameWithType:
        CSharp: IOrmSeltzrOptionsBuilder<TModel, TUser>.GetUpdateOperation(PropertyInfo[], ParameterRetriever[])
        VB: IOrmSeltzrOptionsBuilder(Of TModel, TUser).GetUpdateOperation(PropertyInfo(), ParameterRetriever())
      qualifiedName:
        CSharp: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder<TModel, TUser>.GetUpdateOperation(System.Reflection.PropertyInfo[], Seltzr.ParameterRetrievers.ParameterRetriever[])
        VB: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder(Of TModel, TUser).GetUpdateOperation(System.Reflection.PropertyInfo(), Seltzr.ParameterRetrievers.ParameterRetriever())
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.OrmBase.Options
      source:
        remote:
          path: Seltzr.OrmBase/Options/IOrmSeltzrOptionsBuilder.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: GetUpdateOperation
        path: ../../Seltzr.OrmBase/Options/IOrmSeltzrOptionsBuilder.cs
        startLine: 38
      summary: "\nGets an update <xref href=\"Seltzr.Operations.IOperation%602\" data-throw-if-not-resolved=\"false\"></xref> for this model\n"
      example: []
      syntax:
        content:
          CSharp: IOperation<TModel, TUser> GetUpdateOperation(PropertyInfo[] properties, ParameterRetriever[] retrievers)
          VB: Function GetUpdateOperation(properties As PropertyInfo(), retrievers As ParameterRetriever()) As IOperation(Of TModel, TUser)
        parameters:
        - id: properties
          type: System.Reflection.PropertyInfo[]
          description: The properties to use to compare existing models with parsed models to determine which models to update
        - id: retrievers
          type: Seltzr.ParameterRetrievers.ParameterRetriever[]
          description: A list of parameter retrievers to use to get values for the properties. If null, the parsed body will be used instead
        return:
          type: Seltzr.Operations.IOperation{{TModel},{TUser}}
          description: A new update operation for <see cref="!:TModel"></see>
      overload: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2.GetUpdateOperation*
      modifiers:
        CSharp: []
        VB: []
      references:
        Seltzr.Operations.IOperation`2: 
    - id: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2.GetDeleteOperation
      commentId: M:Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2.GetDeleteOperation
      language: CSharp
      name:
        CSharp: GetDeleteOperation()
        VB: GetDeleteOperation()
      nameWithType:
        CSharp: IOrmSeltzrOptionsBuilder<TModel, TUser>.GetDeleteOperation()
        VB: IOrmSeltzrOptionsBuilder(Of TModel, TUser).GetDeleteOperation()
      qualifiedName:
        CSharp: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder<TModel, TUser>.GetDeleteOperation()
        VB: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder(Of TModel, TUser).GetDeleteOperation()
      type: Method
      assemblies:
      - Seltzr.OrmBase
      namespace: Seltzr.OrmBase.Options
      source:
        remote:
          path: Seltzr.OrmBase/Options/IOrmSeltzrOptionsBuilder.cs
          branch: master
          repo: git@github.com:jlynch630/RestModels.git
        id: GetDeleteOperation
        path: ../../Seltzr.OrmBase/Options/IOrmSeltzrOptionsBuilder.cs
        startLine: 44
      summary: "\nGets a delete <xref href=\"Seltzr.Operations.IOperation%602\" data-throw-if-not-resolved=\"false\"></xref> for this model\n"
      example: []
      syntax:
        content:
          CSharp: IOperation<TModel, TUser> GetDeleteOperation()
          VB: Function GetDeleteOperation As IOperation(Of TModel, TUser)
        return:
          type: Seltzr.Operations.IOperation{{TModel},{TUser}}
          description: A new delete operation for <see cref="!:TModel"></see>
      overload: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2.GetDeleteOperation*
      modifiers:
        CSharp: []
        VB: []
      references:
        Seltzr.Operations.IOperation`2: 
references:
  Seltzr.Options.Builder.SeltzrOptionsBuilder`2:
    name:
      CSharp:
      - id: Seltzr.Options.Builder.SeltzrOptionsBuilder`2
        name: SeltzrOptionsBuilder
        nameWithType: SeltzrOptionsBuilder
        qualifiedName: Seltzr.Options.Builder.SeltzrOptionsBuilder
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Seltzr.Options.Builder.SeltzrOptionsBuilder`2
        name: SeltzrOptionsBuilder
        nameWithType: SeltzrOptionsBuilder
        qualifiedName: Seltzr.Options.Builder.SeltzrOptionsBuilder
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Seltzr.Options.Builder.SeltzrOptionsBuilder`2
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  Seltzr.Options.Builder:
    name:
      CSharp:
      - name: Seltzr.Options.Builder
        nameWithType: Seltzr.Options.Builder
        qualifiedName: Seltzr.Options.Builder
      VB:
      - name: Seltzr.Options.Builder
        nameWithType: Seltzr.Options.Builder
        qualifiedName: Seltzr.Options.Builder
    isDefinition: true
    commentId: N:Seltzr.Options.Builder
  Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}:
    name:
      CSharp:
      - id: Seltzr.Options.Builder.SeltzrOptionsBuilder`2
        name: SeltzrOptionsBuilder
        nameWithType: SeltzrOptionsBuilder
        qualifiedName: Seltzr.Options.Builder.SeltzrOptionsBuilder
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Seltzr.Options.Builder.SeltzrOptionsBuilder`2
        name: SeltzrOptionsBuilder
        nameWithType: SeltzrOptionsBuilder
        qualifiedName: Seltzr.Options.Builder.SeltzrOptionsBuilder
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Seltzr.Options.Builder.SeltzrOptionsBuilder`2
    parent: Seltzr.Options.Builder
    commentId: T:Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.IgnorePrimaryKey*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.IgnorePrimaryKey*
        name: IgnorePrimaryKey
        nameWithType: SeltzrOptionsBuilderExtensions.IgnorePrimaryKey
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.IgnorePrimaryKey
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.IgnorePrimaryKey*
        name: IgnorePrimaryKey
        nameWithType: SeltzrOptionsBuilderExtensions.IgnorePrimaryKey
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.IgnorePrimaryKey
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.IgnorePrimaryKey
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.IncludePrimaryKey*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.IncludePrimaryKey*
        name: IncludePrimaryKey
        nameWithType: SeltzrOptionsBuilderExtensions.IncludePrimaryKey
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.IncludePrimaryKey
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.IncludePrimaryKey*
        name: IncludePrimaryKey
        nameWithType: SeltzrOptionsBuilderExtensions.IncludePrimaryKey
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.IncludePrimaryKey
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.IncludePrimaryKey
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.OmitPrimaryKey*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.OmitPrimaryKey*
        name: OmitPrimaryKey
        nameWithType: SeltzrOptionsBuilderExtensions.OmitPrimaryKey
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.OmitPrimaryKey
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.OmitPrimaryKey*
        name: OmitPrimaryKey
        nameWithType: SeltzrOptionsBuilderExtensions.OmitPrimaryKey
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.OmitPrimaryKey
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.OmitPrimaryKey
  Seltzr.ParameterRetrievers.ParameterRetriever[]:
    name:
      CSharp:
      - id: Seltzr.ParameterRetrievers.ParameterRetriever
        name: ParameterRetriever
        nameWithType: ParameterRetriever
        qualifiedName: Seltzr.ParameterRetrievers.ParameterRetriever
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Seltzr.ParameterRetrievers.ParameterRetriever
        name: ParameterRetriever
        nameWithType: ParameterRetriever
        qualifiedName: Seltzr.ParameterRetrievers.ParameterRetriever
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKey*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKey*
        name: FilterByPrimaryKey
        nameWithType: SeltzrOptionsBuilderExtensions.FilterByPrimaryKey
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKey
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKey*
        name: FilterByPrimaryKey
        nameWithType: SeltzrOptionsBuilderExtensions.FilterByPrimaryKey
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKey
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKey
  System.String[]:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyQuery*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyQuery*
        name: FilterByPrimaryKeyQuery
        nameWithType: SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyQuery
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyQuery
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyQuery*
        name: FilterByPrimaryKeyQuery
        nameWithType: SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyQuery
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyQuery
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyQuery
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyRoute*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyRoute*
        name: FilterByPrimaryKeyRoute
        nameWithType: SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyRoute
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyRoute
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyRoute*
        name: FilterByPrimaryKeyRoute
        nameWithType: SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyRoute
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyRoute
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.FilterByPrimaryKeyRoute
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  System.Action`1:
    name:
      CSharp:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Action`1
  System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{{TModel},{TUser}}}:
    name:
      CSharp:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Seltzr.Options.Builder.SeltzrOptionsBuilder`2
        name: SeltzrOptionsBuilder
        nameWithType: SeltzrOptionsBuilder
        qualifiedName: Seltzr.Options.Builder.SeltzrOptionsBuilder
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Seltzr.Options.Builder.SeltzrOptionsBuilder`2
        name: SeltzrOptionsBuilder
        nameWithType: SeltzrOptionsBuilder
        qualifiedName: Seltzr.Options.Builder.SeltzrOptionsBuilder
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Action`1
    parent: System
    commentId: T:System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{``0,``1}}
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Delete*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Delete*
        name: Delete
        nameWithType: SeltzrOptionsBuilderExtensions.Delete
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Delete
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Delete*
        name: Delete
        nameWithType: SeltzrOptionsBuilderExtensions.Delete
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Delete
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Delete
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey*
        name: DeleteByPrimaryKey
        nameWithType: SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey*
        name: DeleteByPrimaryKey
        nameWithType: SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKey
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery*
        name: DeleteByPrimaryKeyQuery
        nameWithType: SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery*
        name: DeleteByPrimaryKeyQuery
        nameWithType: SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.DeleteByPrimaryKeyQuery
  ? Seltzr.Options.Builder.SeltzrOptionsBuilder`2.SetupGet(System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{`0,`1}})
  : commentId: M:Seltzr.Options.Builder.SeltzrOptionsBuilder`2.SetupGet(System.String,System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{`0,`1}})
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Get*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Get*
        name: Get
        nameWithType: SeltzrOptionsBuilderExtensions.Get
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Get
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Get*
        name: Get
        nameWithType: SeltzrOptionsBuilderExtensions.Get
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Get
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.Get
  Seltzr.Options.Builder.SeltzrOptionsBuilder`2.SetupGet(System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{`0,`1}}):
    commentId: M:Seltzr.Options.Builder.SeltzrOptionsBuilder`2.SetupGet(System.Action{Seltzr.Options.Builder.SeltzrOptionsBuilder{`0,`1}})
  Seltzr.Options.Builder.SeltzrOptionsBuilder`2.SetupGet:
    commentId: M:Seltzr.Options.Builder.SeltzrOptionsBuilder`2.SetupGet
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey*
        name: GetByPrimaryKey
        nameWithType: SeltzrOptionsBuilderExtensions.GetByPrimaryKey
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey*
        name: GetByPrimaryKey
        nameWithType: SeltzrOptionsBuilderExtensions.GetByPrimaryKey
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKey
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery*
        name: GetByPrimaryKeyQuery
        nameWithType: SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery*
        name: GetByPrimaryKeyQuery
        nameWithType: SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.GetByPrimaryKeyQuery
  System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]:
    name:
      CSharp:
      - id: System.Linq.Expressions.Expression`1
        name: Expression
        nameWithType: Expression
        qualifiedName: System.Linq.Expressions.Expression
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Linq.Expressions.Expression`1
        name: Expression
        nameWithType: Expression
        qualifiedName: System.Linq.Expressions.Expression
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy*
        name: PatchUpdateBy
        nameWithType: SeltzrOptionsBuilderExtensions.PatchUpdateBy
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy*
        name: PatchUpdateBy
        nameWithType: SeltzrOptionsBuilderExtensions.PatchUpdateBy
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateBy
  System.Linq.Expressions.Expression`1:
    name:
      CSharp:
      - id: System.Linq.Expressions.Expression`1
        name: Expression
        nameWithType: Expression
        qualifiedName: System.Linq.Expressions.Expression
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TDelegate
        nameWithType: TDelegate
        qualifiedName: TDelegate
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Linq.Expressions.Expression`1
        name: Expression
        nameWithType: Expression
        qualifiedName: System.Linq.Expressions.Expression
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TDelegate
        nameWithType: TDelegate
        qualifiedName: TDelegate
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Linq.Expressions.Expression`1
  System.Linq.Expressions:
    name:
      CSharp:
      - name: System.Linq.Expressions
        nameWithType: System.Linq.Expressions
        qualifiedName: System.Linq.Expressions
        isExternal: true
      VB:
      - name: System.Linq.Expressions
        nameWithType: System.Linq.Expressions
        qualifiedName: System.Linq.Expressions
    isDefinition: true
    commentId: N:System.Linq.Expressions
  System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}:
    name:
      CSharp:
      - id: System.Linq.Expressions.Expression`1
        name: Expression
        nameWithType: Expression
        qualifiedName: System.Linq.Expressions.Expression
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Linq.Expressions.Expression`1
        name: Expression
        nameWithType: Expression
        qualifiedName: System.Linq.Expressions.Expression
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Linq.Expressions.Expression`1
    parent: System.Linq.Expressions
    commentId: T:System.Linq.Expressions.Expression{System.Func{``0,System.Object}}
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody*
        name: PatchUpdateByBody
        nameWithType: SeltzrOptionsBuilderExtensions.PatchUpdateByBody
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody*
        name: PatchUpdateByBody
        nameWithType: SeltzrOptionsBuilderExtensions.PatchUpdateByBody
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByBody
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByParam*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByParam*
        name: PatchUpdateByParam
        nameWithType: SeltzrOptionsBuilderExtensions.PatchUpdateByParam
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByParam
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByParam*
        name: PatchUpdateByParam
        nameWithType: SeltzrOptionsBuilderExtensions.PatchUpdateByParam
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByParam
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByParam
  Seltzr.ParameterRetrievers:
    name:
      CSharp:
      - name: Seltzr.ParameterRetrievers
        nameWithType: Seltzr.ParameterRetrievers
        qualifiedName: Seltzr.ParameterRetrievers
      VB:
      - name: Seltzr.ParameterRetrievers
        nameWithType: Seltzr.ParameterRetrievers
        qualifiedName: Seltzr.ParameterRetrievers
    isDefinition: true
    commentId: N:Seltzr.ParameterRetrievers
  Seltzr.ParameterRetrievers.ParameterRetriever:
    name:
      CSharp:
      - id: Seltzr.ParameterRetrievers.ParameterRetriever
        name: ParameterRetriever
        nameWithType: ParameterRetriever
        qualifiedName: Seltzr.ParameterRetrievers.ParameterRetriever
      VB:
      - id: Seltzr.ParameterRetrievers.ParameterRetriever
        name: ParameterRetriever
        nameWithType: ParameterRetriever
        qualifiedName: Seltzr.ParameterRetrievers.ParameterRetriever
    isDefinition: true
    parent: Seltzr.ParameterRetrievers
    commentId: T:Seltzr.ParameterRetrievers.ParameterRetriever
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey*
        name: PatchUpdateByPrimaryKey
        nameWithType: SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey*
        name: PatchUpdateByPrimaryKey
        nameWithType: SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKey
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery*
        name: PatchUpdateByPrimaryKeyQuery
        nameWithType: SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery*
        name: PatchUpdateByPrimaryKeyQuery
        nameWithType: SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery*
        name: PatchUpdateByQuery
        nameWithType: SeltzrOptionsBuilderExtensions.PatchUpdateByQuery
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery*
        name: PatchUpdateByQuery
        nameWithType: SeltzrOptionsBuilderExtensions.PatchUpdateByQuery
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PatchUpdateByQuery
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostCreate*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostCreate*
        name: PostCreate
        nameWithType: SeltzrOptionsBuilderExtensions.PostCreate
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostCreate
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostCreate*
        name: PostCreate
        nameWithType: SeltzrOptionsBuilderExtensions.PostCreate
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostCreate
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostCreate
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy*
        name: PostUpdateBy
        nameWithType: SeltzrOptionsBuilderExtensions.PostUpdateBy
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy*
        name: PostUpdateBy
        nameWithType: SeltzrOptionsBuilderExtensions.PostUpdateBy
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateBy
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody*
        name: PostUpdateByBody
        nameWithType: SeltzrOptionsBuilderExtensions.PostUpdateByBody
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody*
        name: PostUpdateByBody
        nameWithType: SeltzrOptionsBuilderExtensions.PostUpdateByBody
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByBody
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByParam*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByParam*
        name: PostUpdateByParam
        nameWithType: SeltzrOptionsBuilderExtensions.PostUpdateByParam
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByParam
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByParam*
        name: PostUpdateByParam
        nameWithType: SeltzrOptionsBuilderExtensions.PostUpdateByParam
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByParam
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByParam
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey*
        name: PostUpdateByPrimaryKey
        nameWithType: SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey*
        name: PostUpdateByPrimaryKey
        nameWithType: SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKey
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery*
        name: PostUpdateByPrimaryKeyQuery
        nameWithType: SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery*
        name: PostUpdateByPrimaryKeyQuery
        nameWithType: SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery*
        name: PostUpdateByQuery
        nameWithType: SeltzrOptionsBuilderExtensions.PostUpdateByQuery
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery*
        name: PostUpdateByQuery
        nameWithType: SeltzrOptionsBuilderExtensions.PostUpdateByQuery
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PostUpdateByQuery
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy*
        name: PutUpdateBy
        nameWithType: SeltzrOptionsBuilderExtensions.PutUpdateBy
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy*
        name: PutUpdateBy
        nameWithType: SeltzrOptionsBuilderExtensions.PutUpdateBy
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateBy
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody*
        name: PutUpdateByBody
        nameWithType: SeltzrOptionsBuilderExtensions.PutUpdateByBody
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody*
        name: PutUpdateByBody
        nameWithType: SeltzrOptionsBuilderExtensions.PutUpdateByBody
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByBody
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByParam*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByParam*
        name: PutUpdateByParam
        nameWithType: SeltzrOptionsBuilderExtensions.PutUpdateByParam
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByParam
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByParam*
        name: PutUpdateByParam
        nameWithType: SeltzrOptionsBuilderExtensions.PutUpdateByParam
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByParam
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByParam
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey*
        name: PutUpdateByPrimaryKey
        nameWithType: SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey*
        name: PutUpdateByPrimaryKey
        nameWithType: SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKey
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery*
        name: PutUpdateByPrimaryKeyQuery
        nameWithType: SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery*
        name: PutUpdateByPrimaryKeyQuery
        nameWithType: SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery*:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery*
        name: PutUpdateByQuery
        nameWithType: SeltzrOptionsBuilderExtensions.PutUpdateByQuery
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery*
        name: PutUpdateByQuery
        nameWithType: SeltzrOptionsBuilderExtensions.PutUpdateByQuery
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery
    isDefinition: true
    commentId: Overload:Seltzr.Extensions.SeltzrOptionsBuilderExtensions.PutUpdateByQuery
  Seltzr.Extensions.SeltzrOptionsBuilderExtensions:
    name:
      CSharp:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions
        name: SeltzrOptionsBuilderExtensions
        nameWithType: SeltzrOptionsBuilderExtensions
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions
      VB:
      - id: Seltzr.Extensions.SeltzrOptionsBuilderExtensions
        name: SeltzrOptionsBuilderExtensions
        nameWithType: SeltzrOptionsBuilderExtensions
        qualifiedName: Seltzr.Extensions.SeltzrOptionsBuilderExtensions
    isDefinition: true
    commentId: T:Seltzr.Extensions.SeltzrOptionsBuilderExtensions
  Seltzr.Extensions:
    name:
      CSharp:
      - name: Seltzr.Extensions
        nameWithType: Seltzr.Extensions
        qualifiedName: Seltzr.Extensions
      VB:
      - name: Seltzr.Extensions
        nameWithType: Seltzr.Extensions
        qualifiedName: Seltzr.Extensions
    isDefinition: true
    commentId: N:Seltzr.Extensions
  System.Linq.IQueryable`1:
    name:
      CSharp:
      - id: System.Linq.IQueryable`1
        name: IQueryable
        nameWithType: IQueryable
        qualifiedName: System.Linq.IQueryable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Linq.IQueryable`1
        name: IQueryable
        nameWithType: IQueryable
        qualifiedName: System.Linq.IQueryable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Linq.IQueryable`1
  System.Linq:
    name:
      CSharp:
      - name: System.Linq
        nameWithType: System.Linq
        qualifiedName: System.Linq
        isExternal: true
      VB:
      - name: System.Linq
        nameWithType: System.Linq
        qualifiedName: System.Linq
    isDefinition: true
    commentId: N:System.Linq
  System.Linq.IQueryable{{TModel}}:
    name:
      CSharp:
      - id: System.Linq.IQueryable`1
        name: IQueryable
        nameWithType: IQueryable
        qualifiedName: System.Linq.IQueryable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Linq.IQueryable`1
        name: IQueryable
        nameWithType: IQueryable
        qualifiedName: System.Linq.IQueryable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Linq.IQueryable`1
    parent: System.Linq
    commentId: T:System.Linq.IQueryable{`0}
  Seltzr.Context.IApiContext`2:
    name:
      CSharp:
      - id: Seltzr.Context.IApiContext`2
        name: IApiContext
        nameWithType: IApiContext
        qualifiedName: Seltzr.Context.IApiContext
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Seltzr.Context.IApiContext`2
        name: IApiContext
        nameWithType: IApiContext
        qualifiedName: Seltzr.Context.IApiContext
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Seltzr.Context.IApiContext`2
  Seltzr.Context:
    name:
      CSharp:
      - name: Seltzr.Context
        nameWithType: Seltzr.Context
        qualifiedName: Seltzr.Context
      VB:
      - name: Seltzr.Context
        nameWithType: Seltzr.Context
        qualifiedName: Seltzr.Context
    isDefinition: true
    commentId: N:Seltzr.Context
  Seltzr.Context.IApiContext{{TModel},System.Object}:
    name:
      CSharp:
      - id: Seltzr.Context.IApiContext`2
        name: IApiContext
        nameWithType: IApiContext
        qualifiedName: Seltzr.Context.IApiContext
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Seltzr.Context.IApiContext`2
        name: IApiContext
        nameWithType: IApiContext
        qualifiedName: Seltzr.Context.IApiContext
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Seltzr.Context.IApiContext`2
    parent: Seltzr.Context
    commentId: T:Seltzr.Context.IApiContext{`0,System.Object}
  Seltzr.OrmBase.IOrmDataProvider`2.GetModels*:
    name:
      CSharp:
      - id: Seltzr.OrmBase.IOrmDataProvider`2.GetModels*
        name: GetModels
        nameWithType: IOrmDataProvider<TModel, TUser>.GetModels
        qualifiedName: Seltzr.OrmBase.IOrmDataProvider<TModel, TUser>.GetModels
      VB:
      - id: Seltzr.OrmBase.IOrmDataProvider`2.GetModels*
        name: GetModels
        nameWithType: IOrmDataProvider(Of TModel, TUser).GetModels
        qualifiedName: Seltzr.OrmBase.IOrmDataProvider(Of TModel, TUser).GetModels
    isDefinition: true
    commentId: Overload:Seltzr.OrmBase.IOrmDataProvider`2.GetModels
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.List{Seltzr.OrmBase.KeyProperty}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Seltzr.OrmBase.KeyProperty
        name: KeyProperty
        nameWithType: KeyProperty
        qualifiedName: Seltzr.OrmBase.KeyProperty
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Seltzr.OrmBase.KeyProperty
        name: KeyProperty
        nameWithType: KeyProperty
        qualifiedName: Seltzr.OrmBase.KeyProperty
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Seltzr.OrmBase.KeyProperty}
  Seltzr.OrmBase.IOrmDataProvider`2.GetPrimaryKey*:
    name:
      CSharp:
      - id: Seltzr.OrmBase.IOrmDataProvider`2.GetPrimaryKey*
        name: GetPrimaryKey
        nameWithType: IOrmDataProvider<TModel, TUser>.GetPrimaryKey
        qualifiedName: Seltzr.OrmBase.IOrmDataProvider<TModel, TUser>.GetPrimaryKey
      VB:
      - id: Seltzr.OrmBase.IOrmDataProvider`2.GetPrimaryKey*
        name: GetPrimaryKey
        nameWithType: IOrmDataProvider(Of TModel, TUser).GetPrimaryKey
        qualifiedName: Seltzr.OrmBase.IOrmDataProvider(Of TModel, TUser).GetPrimaryKey
    isDefinition: true
    commentId: Overload:Seltzr.OrmBase.IOrmDataProvider`2.GetPrimaryKey
  Seltzr.Operations.IOperation`2:
    name:
      CSharp:
      - id: Seltzr.Operations.IOperation`2
        name: IOperation
        nameWithType: IOperation
        qualifiedName: Seltzr.Operations.IOperation
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Seltzr.Operations.IOperation`2
        name: IOperation
        nameWithType: IOperation
        qualifiedName: Seltzr.Operations.IOperation
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Seltzr.Operations.IOperation`2
  Seltzr.Operations:
    name:
      CSharp:
      - name: Seltzr.Operations
        nameWithType: Seltzr.Operations
        qualifiedName: Seltzr.Operations
      VB:
      - name: Seltzr.Operations
        nameWithType: Seltzr.Operations
        qualifiedName: Seltzr.Operations
    isDefinition: true
    commentId: N:Seltzr.Operations
  Seltzr.Operations.IOperation{{TModel},{TUser}}:
    name:
      CSharp:
      - id: Seltzr.Operations.IOperation`2
        name: IOperation
        nameWithType: IOperation
        qualifiedName: Seltzr.Operations.IOperation
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Seltzr.Operations.IOperation`2
        name: IOperation
        nameWithType: IOperation
        qualifiedName: Seltzr.Operations.IOperation
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Seltzr.Operations.IOperation`2
    parent: Seltzr.Operations
    commentId: T:Seltzr.Operations.IOperation{`0,`1}
  Seltzr.OrmBase.IOrmDataProvider`2.GetCreateOperation*:
    name:
      CSharp:
      - id: Seltzr.OrmBase.IOrmDataProvider`2.GetCreateOperation*
        name: GetCreateOperation
        nameWithType: IOrmDataProvider<TModel, TUser>.GetCreateOperation
        qualifiedName: Seltzr.OrmBase.IOrmDataProvider<TModel, TUser>.GetCreateOperation
      VB:
      - id: Seltzr.OrmBase.IOrmDataProvider`2.GetCreateOperation*
        name: GetCreateOperation
        nameWithType: IOrmDataProvider(Of TModel, TUser).GetCreateOperation
        qualifiedName: Seltzr.OrmBase.IOrmDataProvider(Of TModel, TUser).GetCreateOperation
    isDefinition: true
    commentId: Overload:Seltzr.OrmBase.IOrmDataProvider`2.GetCreateOperation
  System.Reflection.PropertyInfo[]:
    name:
      CSharp:
      - id: System.Reflection.PropertyInfo
        name: PropertyInfo
        nameWithType: PropertyInfo
        qualifiedName: System.Reflection.PropertyInfo
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Reflection.PropertyInfo
        name: PropertyInfo
        nameWithType: PropertyInfo
        qualifiedName: System.Reflection.PropertyInfo
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Seltzr.OrmBase.IOrmDataProvider`2.GetUpdateOperation*:
    name:
      CSharp:
      - id: Seltzr.OrmBase.IOrmDataProvider`2.GetUpdateOperation*
        name: GetUpdateOperation
        nameWithType: IOrmDataProvider<TModel, TUser>.GetUpdateOperation
        qualifiedName: Seltzr.OrmBase.IOrmDataProvider<TModel, TUser>.GetUpdateOperation
      VB:
      - id: Seltzr.OrmBase.IOrmDataProvider`2.GetUpdateOperation*
        name: GetUpdateOperation
        nameWithType: IOrmDataProvider(Of TModel, TUser).GetUpdateOperation
        qualifiedName: Seltzr.OrmBase.IOrmDataProvider(Of TModel, TUser).GetUpdateOperation
    isDefinition: true
    commentId: Overload:Seltzr.OrmBase.IOrmDataProvider`2.GetUpdateOperation
  Seltzr.OrmBase.IOrmDataProvider`2.GetDeleteOperation*:
    name:
      CSharp:
      - id: Seltzr.OrmBase.IOrmDataProvider`2.GetDeleteOperation*
        name: GetDeleteOperation
        nameWithType: IOrmDataProvider<TModel, TUser>.GetDeleteOperation
        qualifiedName: Seltzr.OrmBase.IOrmDataProvider<TModel, TUser>.GetDeleteOperation
      VB:
      - id: Seltzr.OrmBase.IOrmDataProvider`2.GetDeleteOperation*
        name: GetDeleteOperation
        nameWithType: IOrmDataProvider(Of TModel, TUser).GetDeleteOperation
        qualifiedName: Seltzr.OrmBase.IOrmDataProvider(Of TModel, TUser).GetDeleteOperation
    isDefinition: true
    commentId: Overload:Seltzr.OrmBase.IOrmDataProvider`2.GetDeleteOperation
  Seltzr.OrmBase.IOrmDataProvider`2:
    name:
      CSharp:
      - id: Seltzr.OrmBase.IOrmDataProvider`2
        name: IOrmDataProvider
        nameWithType: IOrmDataProvider
        qualifiedName: Seltzr.OrmBase.IOrmDataProvider
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Seltzr.OrmBase.IOrmDataProvider`2
        name: IOrmDataProvider
        nameWithType: IOrmDataProvider
        qualifiedName: Seltzr.OrmBase.IOrmDataProvider
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Seltzr.OrmBase.IOrmDataProvider`2
  Seltzr.OrmBase.KeyProperty:
    name:
      CSharp:
      - id: Seltzr.OrmBase.KeyProperty
        name: KeyProperty
        nameWithType: KeyProperty
        qualifiedName: Seltzr.OrmBase.KeyProperty
      VB:
      - id: Seltzr.OrmBase.KeyProperty
        name: KeyProperty
        nameWithType: KeyProperty
        qualifiedName: Seltzr.OrmBase.KeyProperty
    isDefinition: true
    commentId: T:Seltzr.OrmBase.KeyProperty
  Seltzr.OrmBase.KeyProperty.PropertyInfo:
    commentId: P:Seltzr.OrmBase.KeyProperty.PropertyInfo
  System.Reflection:
    name:
      CSharp:
      - name: System.Reflection
        nameWithType: System.Reflection
        qualifiedName: System.Reflection
        isExternal: true
      VB:
      - name: System.Reflection
        nameWithType: System.Reflection
        qualifiedName: System.Reflection
    isDefinition: true
    commentId: N:System.Reflection
  System.Reflection.PropertyInfo:
    name:
      CSharp:
      - id: System.Reflection.PropertyInfo
        name: PropertyInfo
        nameWithType: PropertyInfo
        qualifiedName: System.Reflection.PropertyInfo
        isExternal: true
      VB:
      - id: System.Reflection.PropertyInfo
        name: PropertyInfo
        nameWithType: PropertyInfo
        qualifiedName: System.Reflection.PropertyInfo
        isExternal: true
    isDefinition: true
    parent: System.Reflection
    commentId: T:System.Reflection.PropertyInfo
  Seltzr.OrmBase.KeyProperty.#ctor*:
    name:
      CSharp:
      - id: Seltzr.OrmBase.KeyProperty.#ctor*
        name: KeyProperty
        nameWithType: KeyProperty.KeyProperty
        qualifiedName: Seltzr.OrmBase.KeyProperty.KeyProperty
      VB:
      - id: Seltzr.OrmBase.KeyProperty.#ctor*
        name: KeyProperty
        nameWithType: KeyProperty.KeyProperty
        qualifiedName: Seltzr.OrmBase.KeyProperty.KeyProperty
    isDefinition: true
    commentId: Overload:Seltzr.OrmBase.KeyProperty.#ctor
  Seltzr.OrmBase.KeyProperty.Name*:
    name:
      CSharp:
      - id: Seltzr.OrmBase.KeyProperty.Name*
        name: Name
        nameWithType: KeyProperty.Name
        qualifiedName: Seltzr.OrmBase.KeyProperty.Name
      VB:
      - id: Seltzr.OrmBase.KeyProperty.Name*
        name: Name
        nameWithType: KeyProperty.Name
        qualifiedName: Seltzr.OrmBase.KeyProperty.Name
    isDefinition: true
    commentId: Overload:Seltzr.OrmBase.KeyProperty.Name
  Seltzr.OrmBase.KeyProperty.PropertyInfo*:
    name:
      CSharp:
      - id: Seltzr.OrmBase.KeyProperty.PropertyInfo*
        name: PropertyInfo
        nameWithType: KeyProperty.PropertyInfo
        qualifiedName: Seltzr.OrmBase.KeyProperty.PropertyInfo
      VB:
      - id: Seltzr.OrmBase.KeyProperty.PropertyInfo*
        name: PropertyInfo
        nameWithType: KeyProperty.PropertyInfo
        qualifiedName: Seltzr.OrmBase.KeyProperty.PropertyInfo
    isDefinition: true
    commentId: Overload:Seltzr.OrmBase.KeyProperty.PropertyInfo
  Seltzr.OrmBase:
    name:
      CSharp:
      - name: Seltzr.OrmBase
        nameWithType: Seltzr.OrmBase
        qualifiedName: Seltzr.OrmBase
      VB:
      - name: Seltzr.OrmBase
        nameWithType: Seltzr.OrmBase
        qualifiedName: Seltzr.OrmBase
    isDefinition: true
    commentId: N:Seltzr.OrmBase
  Seltzr.Filters.IFilter`1:
    name:
      CSharp:
      - id: Seltzr.Filters.IFilter`1
        name: IFilter
        nameWithType: IFilter
        qualifiedName: Seltzr.Filters.IFilter
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Seltzr.Filters.IFilter`1
        name: IFilter
        nameWithType: IFilter
        qualifiedName: Seltzr.Filters.IFilter
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Seltzr.Filters.IFilter`1
  Seltzr.Filters:
    name:
      CSharp:
      - name: Seltzr.Filters
        nameWithType: Seltzr.Filters
        qualifiedName: Seltzr.Filters
      VB:
      - name: Seltzr.Filters
        nameWithType: Seltzr.Filters
        qualifiedName: Seltzr.Filters
    isDefinition: true
    commentId: N:Seltzr.Filters
  Seltzr.Filters.IFilter{{TModel}}:
    name:
      CSharp:
      - id: Seltzr.Filters.IFilter`1
        name: IFilter
        nameWithType: IFilter
        qualifiedName: Seltzr.Filters.IFilter
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Seltzr.Filters.IFilter`1
        name: IFilter
        nameWithType: IFilter
        qualifiedName: Seltzr.Filters.IFilter
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Seltzr.Filters.IFilter`1
    parent: Seltzr.Filters
    commentId: T:Seltzr.Filters.IFilter{`0}
  Seltzr.Filters.IFilter`2:
    name:
      CSharp:
      - id: Seltzr.Filters.IFilter`2
        name: IFilter
        nameWithType: IFilter
        qualifiedName: Seltzr.Filters.IFilter
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Seltzr.Filters.IFilter`2
        name: IFilter
        nameWithType: IFilter
        qualifiedName: Seltzr.Filters.IFilter
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Seltzr.Filters.IFilter`2
  Seltzr.Filters.IFilter{{TModel},System.Object}:
    name:
      CSharp:
      - id: Seltzr.Filters.IFilter`2
        name: IFilter
        nameWithType: IFilter
        qualifiedName: Seltzr.Filters.IFilter
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Seltzr.Filters.IFilter`2
        name: IFilter
        nameWithType: IFilter
        qualifiedName: Seltzr.Filters.IFilter
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Seltzr.Filters.IFilter`2
    parent: Seltzr.Filters
    commentId: T:Seltzr.Filters.IFilter{`0,System.Object}
  Seltzr.OrmBase.Filters.PrimaryKeyFilter`1.#ctor*:
    name:
      CSharp:
      - id: Seltzr.OrmBase.Filters.PrimaryKeyFilter`1.#ctor*
        name: PrimaryKeyFilter
        nameWithType: PrimaryKeyFilter<TModel>.PrimaryKeyFilter
        qualifiedName: Seltzr.OrmBase.Filters.PrimaryKeyFilter<TModel>.PrimaryKeyFilter
      VB:
      - id: Seltzr.OrmBase.Filters.PrimaryKeyFilter`1.#ctor*
        name: PrimaryKeyFilter
        nameWithType: PrimaryKeyFilter(Of TModel).PrimaryKeyFilter
        qualifiedName: Seltzr.OrmBase.Filters.PrimaryKeyFilter(Of TModel).PrimaryKeyFilter
    isDefinition: true
    commentId: Overload:Seltzr.OrmBase.Filters.PrimaryKeyFilter`1.#ctor
  System.Threading.Tasks.Task`1:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Threading.Tasks.Task`1
  System.Threading.Tasks:
    name:
      CSharp:
      - name: System.Threading.Tasks
        nameWithType: System.Threading.Tasks
        qualifiedName: System.Threading.Tasks
        isExternal: true
      VB:
      - name: System.Threading.Tasks
        nameWithType: System.Threading.Tasks
        qualifiedName: System.Threading.Tasks
    isDefinition: true
    commentId: N:System.Threading.Tasks
  System.Threading.Tasks.Task{System.Linq.IQueryable{{TModel}}}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Linq.IQueryable`1
        name: IQueryable
        nameWithType: IQueryable
        qualifiedName: System.Linq.IQueryable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Linq.IQueryable`1
        name: IQueryable
        nameWithType: IQueryable
        qualifiedName: System.Linq.IQueryable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{System.Linq.IQueryable{`0}}
  Seltzr.OrmBase.Filters.PrimaryKeyFilter`1.FilterDataAsync*:
    name:
      CSharp:
      - id: Seltzr.OrmBase.Filters.PrimaryKeyFilter`1.FilterDataAsync*
        name: FilterDataAsync
        nameWithType: PrimaryKeyFilter<TModel>.FilterDataAsync
        qualifiedName: Seltzr.OrmBase.Filters.PrimaryKeyFilter<TModel>.FilterDataAsync
      VB:
      - id: Seltzr.OrmBase.Filters.PrimaryKeyFilter`1.FilterDataAsync*
        name: FilterDataAsync
        nameWithType: PrimaryKeyFilter(Of TModel).FilterDataAsync
        qualifiedName: Seltzr.OrmBase.Filters.PrimaryKeyFilter(Of TModel).FilterDataAsync
    isDefinition: true
    commentId: Overload:Seltzr.OrmBase.Filters.PrimaryKeyFilter`1.FilterDataAsync
  Seltzr.Filters.IFilter`2.FilterDataAsync(Seltzr.Context.IApiContext{`0,`1},System.Linq.IQueryable{`0}):
    name:
      CSharp:
      - id: Seltzr.Filters.IFilter`2.FilterDataAsync(Seltzr.Context.IApiContext{`0,`1},System.Linq.IQueryable{`0})
        name: FilterDataAsync
        nameWithType: IFilter<TModel, TUser>.FilterDataAsync
        qualifiedName: Seltzr.Filters.IFilter<TModel, TUser>.FilterDataAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Seltzr.Context.IApiContext`2
        name: IApiContext
        nameWithType: IApiContext
        qualifiedName: Seltzr.Context.IApiContext
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Linq.IQueryable`1
        name: IQueryable
        nameWithType: IQueryable
        qualifiedName: System.Linq.IQueryable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Seltzr.Filters.IFilter`2.FilterDataAsync(Seltzr.Context.IApiContext{`0,`1},System.Linq.IQueryable{`0})
        name: FilterDataAsync
        nameWithType: IFilter(Of TModel, TUser).FilterDataAsync
        qualifiedName: Seltzr.Filters.IFilter(Of TModel, TUser).FilterDataAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Seltzr.Context.IApiContext`2
        name: IApiContext
        nameWithType: IApiContext
        qualifiedName: Seltzr.Context.IApiContext
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Linq.IQueryable`1
        name: IQueryable
        nameWithType: IQueryable
        qualifiedName: System.Linq.IQueryable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Seltzr.Filters.IFilter`2.FilterDataAsync(Seltzr.Context.IApiContext{`0,`1},System.Linq.IQueryable{`0})
  ? Seltzr.Filters.IFilter{{TModel},System.Object}.FilterDataAsync(Seltzr.Context.IApiContext{{TModel},System.Object},System.Linq.IQueryable{{TModel}})
  : name:
      CSharp:
      - id: Seltzr.Filters.IFilter`2.FilterDataAsync(Seltzr.Context.IApiContext{`0,`1},System.Linq.IQueryable{`0})
        name: FilterDataAsync
        nameWithType: IFilter<TModel, Object>.FilterDataAsync
        qualifiedName: Seltzr.Filters.IFilter<TModel, System.Object>.FilterDataAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Seltzr.Context.IApiContext`2
        name: IApiContext
        nameWithType: IApiContext
        qualifiedName: Seltzr.Context.IApiContext
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Linq.IQueryable`1
        name: IQueryable
        nameWithType: IQueryable
        qualifiedName: System.Linq.IQueryable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Seltzr.Filters.IFilter`2.FilterDataAsync(Seltzr.Context.IApiContext{`0,`1},System.Linq.IQueryable{`0})
        name: FilterDataAsync
        nameWithType: IFilter(Of TModel, Object).FilterDataAsync
        qualifiedName: Seltzr.Filters.IFilter(Of TModel, System.Object).FilterDataAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Seltzr.Context.IApiContext`2
        name: IApiContext
        nameWithType: IApiContext
        qualifiedName: Seltzr.Context.IApiContext
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Linq.IQueryable`1
        name: IQueryable
        nameWithType: IQueryable
        qualifiedName: System.Linq.IQueryable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Seltzr.Filters.IFilter`2.FilterDataAsync(Seltzr.Context.IApiContext{`0,`1},System.Linq.IQueryable{`0})
    parent: Seltzr.Filters.IFilter{{TModel},System.Object}
    commentId: M:Seltzr.Filters.IFilter{`0,System.Object}.FilterDataAsync(Seltzr.Context.IApiContext{`0,System.Object},System.Linq.IQueryable{`0})
  Seltzr.OrmBase.Filters.PrimaryKeyFilter`1:
    name:
      CSharp:
      - id: Seltzr.OrmBase.Filters.PrimaryKeyFilter`1
        name: PrimaryKeyFilter
        nameWithType: PrimaryKeyFilter
        qualifiedName: Seltzr.OrmBase.Filters.PrimaryKeyFilter
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Seltzr.OrmBase.Filters.PrimaryKeyFilter`1
        name: PrimaryKeyFilter
        nameWithType: PrimaryKeyFilter
        qualifiedName: Seltzr.OrmBase.Filters.PrimaryKeyFilter
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Seltzr.OrmBase.Filters.PrimaryKeyFilter`1
  Seltzr.OrmBase.Filters:
    name:
      CSharp:
      - name: Seltzr.OrmBase.Filters
        nameWithType: Seltzr.OrmBase.Filters
        qualifiedName: Seltzr.OrmBase.Filters
      VB:
      - name: Seltzr.OrmBase.Filters
        nameWithType: Seltzr.OrmBase.Filters
        qualifiedName: Seltzr.OrmBase.Filters
    isDefinition: true
    commentId: N:Seltzr.OrmBase.Filters
  Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2.GetPrimaryKey*:
    name:
      CSharp:
      - id: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2.GetPrimaryKey*
        name: GetPrimaryKey
        nameWithType: IOrmSeltzrOptionsBuilder<TModel, TUser>.GetPrimaryKey
        qualifiedName: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder<TModel, TUser>.GetPrimaryKey
      VB:
      - id: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2.GetPrimaryKey*
        name: GetPrimaryKey
        nameWithType: IOrmSeltzrOptionsBuilder(Of TModel, TUser).GetPrimaryKey
        qualifiedName: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder(Of TModel, TUser).GetPrimaryKey
    isDefinition: true
    commentId: Overload:Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2.GetPrimaryKey
  Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2.GetCreateOperation*:
    name:
      CSharp:
      - id: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2.GetCreateOperation*
        name: GetCreateOperation
        nameWithType: IOrmSeltzrOptionsBuilder<TModel, TUser>.GetCreateOperation
        qualifiedName: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder<TModel, TUser>.GetCreateOperation
      VB:
      - id: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2.GetCreateOperation*
        name: GetCreateOperation
        nameWithType: IOrmSeltzrOptionsBuilder(Of TModel, TUser).GetCreateOperation
        qualifiedName: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder(Of TModel, TUser).GetCreateOperation
    isDefinition: true
    commentId: Overload:Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2.GetCreateOperation
  Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2.GetUpdateOperation*:
    name:
      CSharp:
      - id: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2.GetUpdateOperation*
        name: GetUpdateOperation
        nameWithType: IOrmSeltzrOptionsBuilder<TModel, TUser>.GetUpdateOperation
        qualifiedName: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder<TModel, TUser>.GetUpdateOperation
      VB:
      - id: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2.GetUpdateOperation*
        name: GetUpdateOperation
        nameWithType: IOrmSeltzrOptionsBuilder(Of TModel, TUser).GetUpdateOperation
        qualifiedName: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder(Of TModel, TUser).GetUpdateOperation
    isDefinition: true
    commentId: Overload:Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2.GetUpdateOperation
  Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2.GetDeleteOperation*:
    name:
      CSharp:
      - id: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2.GetDeleteOperation*
        name: GetDeleteOperation
        nameWithType: IOrmSeltzrOptionsBuilder<TModel, TUser>.GetDeleteOperation
        qualifiedName: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder<TModel, TUser>.GetDeleteOperation
      VB:
      - id: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2.GetDeleteOperation*
        name: GetDeleteOperation
        nameWithType: IOrmSeltzrOptionsBuilder(Of TModel, TUser).GetDeleteOperation
        qualifiedName: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder(Of TModel, TUser).GetDeleteOperation
    isDefinition: true
    commentId: Overload:Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2.GetDeleteOperation
  Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2:
    name:
      CSharp:
      - id: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2
        name: IOrmSeltzrOptionsBuilder
        nameWithType: IOrmSeltzrOptionsBuilder
        qualifiedName: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2
        name: IOrmSeltzrOptionsBuilder
        nameWithType: IOrmSeltzrOptionsBuilder
        qualifiedName: Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Seltzr.OrmBase.Options.IOrmSeltzrOptionsBuilder`2
  Seltzr.OrmBase.Options:
    name:
      CSharp:
      - name: Seltzr.OrmBase.Options
        nameWithType: Seltzr.OrmBase.Options
        qualifiedName: Seltzr.OrmBase.Options
      VB:
      - name: Seltzr.OrmBase.Options
        nameWithType: Seltzr.OrmBase.Options
        qualifiedName: Seltzr.OrmBase.Options
    isDefinition: true
    commentId: N:Seltzr.OrmBase.Options
